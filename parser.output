Terminals unused in grammar

    NIL
    BOOL


Rules useless in parser due to conflicts

   72 assignment_statement: assignment


Stato 5 1 conflitti shift/riduzione
Stato 15 1 conflitti shift/riduzione
Stato 24 2 conflitti shift/riduzione
Stato 85 6 conflitti shift/riduzione
Stato 88 3 conflitti shift/riduzione
Stato 90 15 conflitti riduzione/riduzione
Stato 101 15 conflitti riduzione/riduzione
Stato 102 1 conflitti shift/riduzione
Stato 110 1 conflitti shift/riduzione


Grammatica

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 global_declaration_list

    3 global_declaration_list: global_declaration
    4                        | global_declaration global_declaration_list

    5 global_declaration: var_declaration
    6                   | func_declaration

    7 var_declaration: declarator_list
    8                | ID declarator_list

    9 declarator_list: declarator
   10                | declarator ',' declarator_list

   11 declarator: var
   12           | assignment

   13 var: ID
   14    | ID '{' expr '}'

   15 $@2: ε

   16 func_declaration: FUNCTION ID '(' param_list ')' $@2 compound_statement

   17 $@3: ε

   18 func_declaration: FUNCTION ID '(' ')' $@3 compound_statement

   19 param_list: param
   20           | param ',' param_list

   21 param: ID
   22      | ID '[' ']'

   23 compound_statement: scope_enter statement_list scope_exit

   24 scope_enter: '{'

   25 scope_exit: '}'

   26 statement_list: statement
   27               | statement statement_list

   28 statement: var_declaration
   29          | compound_statement
   30          | expr_statement
   31          | selection_statement
   32          | iteration_statement
   33          | return_statement
   34          | printf_statement
   35          | read_statement
   36          | assignment_statement

   37 embedded_statement: compound_statement
   38                   | single_statement

   39 single_statement: var_declaration
   40                 | expr_statement
   41                 | selection_statement
   42                 | iteration_statement
   43                 | return_statement
   44                 | printf_statement
   45                 | read_statement
   46                 | assignment_statement

   47 expr_statement: expr

   48 selection_statement: IF if_cond THEN embedded_statement END
   49                    | IF if_cond THEN embedded_statement ELSE embedded_statement END

   50 if_cond: expr

   51 iteration_statement: FOR init ',' cond ',' update DO embedded_statement

   52 init: assignment
   53     | ε

   54 cond: expr
   55     | ε

   56 update: assignment
   57       | expr
   58       | ε

   59 return_statement: RETURN
   60                 | RETURN expr

   61 printf_statement: PRINT '(' format_string ')'
   62                 | PRINT '(' format_string ',' args ')'
   63                 | PRINT '(' ')'

   64 read_statement: READ '(' format_string ',' read_var_list ')'
   65               | READ '(' format_string ')'
   66               | READ '(' ')'

   67 read_var_list: '&' var
   68              | var
   69              | '&' var ',' read_var_list
   70              | var ',' read_var_list

   71 format_string: STRING

   72 assignment_statement: assignment

   73 assignment: var '=' expr

   74 expr: var
   75     | number
   76     | func_call
   77     | expr '+' expr
   78     | expr '-' expr
   79     | expr '*' expr
   80     | expr '/' expr
   81     | NOT expr
   82     | expr AND expr
   83     | expr OR expr
   84     | expr '>' expr
   85     | expr '<' expr
   86     | expr GE expr
   87     | expr LE expr
   88     | expr EQ expr
   89     | expr NE expr
   90     | '(' expr ')'
   91     | '-' expr

   92 number: INT_NUM
   93       | FLOAT_NUM

   94 func_call: ID '(' args ')'
   95          | ID '(' ')'

   96 args: expr
   97     | expr ',' args


Simboli terminali e regole in cui appaiono

    $end (0) 0
    '&' (38) 67 69
    '(' (40) 16 18 61 62 63 64 65 66 90 94 95
    ')' (41) 16 18 61 62 63 64 65 66 90 94 95
    '*' (42) 79
    '+' (43) 77
    ',' (44) 10 20 51 62 64 69 70 97
    '-' (45) 78 91
    '/' (47) 80
    '<' (60) 85
    '=' (61) 73
    '>' (62) 84
    '[' (91) 22
    ']' (93) 22
    '{' (123) 14 24
    '}' (125) 14 25
    error (256)
    IF (258) 48 49
    ELSE (259) 49
    THEN (260) 48 49
    FOR (261) 51
    DO (262) 51
    END (263) 48 49
    RETURN (264) 59 60
    FUNCTION <t> (265) 16 18
    PRINT <s> (266) 61 62 63
    READ <s> (267) 64 65 66
    NIL (268)
    STRING <s> (269) 71
    BOOL (270)
    INT_NUM <s> (271) 92
    FLOAT_NUM <s> (272) 93
    ID <s> (273) 8 13 14 16 18 21 22 94 95
    AND (274) 82
    OR (275) 83
    NOT (276) 81
    GE (277) 86
    LE (278) 87
    EQ (279) 88
    NE (280) 89
    MINUS (281)


Simboli nonterminali e regole in cui appaiono

    $accept (42)
        on left: 0
    program (43)
        on left: 2
        on right: 0
    $@1 (44)
        on left: 1
        on right: 2
    global_declaration_list <ast> (45)
        on left: 3 4
        on right: 2 4
    global_declaration <ast> (46)
        on left: 5 6
        on right: 3 4
    var_declaration <ast> (47)
        on left: 7 8
        on right: 5 28 39
    declarator_list <ast> (48)
        on left: 9 10
        on right: 7 8 10
    declarator <ast> (49)
        on left: 11 12
        on right: 9 10
    var <ast> (50)
        on left: 13 14
        on right: 11 67 68 69 70 73 74
    func_declaration <ast> (51)
        on left: 16 18
        on right: 6
    $@2 (52)
        on left: 15
        on right: 16
    $@3 (53)
        on left: 17
        on right: 18
    param_list <ast> (54)
        on left: 19 20
        on right: 16 20
    param <ast> (55)
        on left: 21 22
        on right: 19 20
    compound_statement <ast> (56)
        on left: 23
        on right: 16 18 29 37
    scope_enter (57)
        on left: 24
        on right: 23
    scope_exit (58)
        on left: 25
        on right: 23
    statement_list <ast> (59)
        on left: 26 27
        on right: 23 27
    statement <ast> (60)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 26 27
    embedded_statement <ast> (61)
        on left: 37 38
        on right: 48 49 51
    single_statement <ast> (62)
        on left: 39 40 41 42 43 44 45 46
        on right: 38
    expr_statement <ast> (63)
        on left: 47
        on right: 30 40
    selection_statement <ast> (64)
        on left: 48 49
        on right: 31 41
    if_cond <ast> (65)
        on left: 50
        on right: 48 49
    iteration_statement <ast> (66)
        on left: 51
        on right: 32 42
    init <ast> (67)
        on left: 52 53
        on right: 51
    cond <ast> (68)
        on left: 54 55
        on right: 51
    update <ast> (69)
        on left: 56 57 58
        on right: 51
    return_statement <ast> (70)
        on left: 59 60
        on right: 33 43
    printf_statement <ast> (71)
        on left: 61 62 63
        on right: 34 44
    read_statement <ast> (72)
        on left: 64 65 66
        on right: 35 45
    read_var_list <ast> (73)
        on left: 67 68 69 70
        on right: 64 69 70
    format_string <ast> (74)
        on left: 71
        on right: 61 62 64 65
    assignment_statement <ast> (75)
        on left: 72
        on right: 36 46
    assignment <ast> (76)
        on left: 73
        on right: 12 52 56 72
    expr <ast> (77)
        on left: 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91
        on right: 14 47 50 54 57 60 73 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 96 97
    number <ast> (78)
        on left: 92 93
        on right: 75
    func_call <ast> (79)
        on left: 94 95
        on right: 76
    args <ast> (80)
        on left: 96 97
        on right: 62 94 97


State 0

    0 $accept: • program $end

    $default  riduzione con la regola 1 ($@1)

    program  prosecuzione allo stato 1
    $@1      prosecuzione allo stato 2


State 1

    0 $accept: program • $end

    $end  shift e prosecuzione allo stato 3


State 2

    2 program: $@1 • global_declaration_list

    FUNCTION  shift e prosecuzione allo stato 4
    ID        shift e prosecuzione allo stato 5

    global_declaration_list  prosecuzione allo stato 6
    global_declaration       prosecuzione allo stato 7
    var_declaration          prosecuzione allo stato 8
    declarator_list          prosecuzione allo stato 9
    declarator               prosecuzione allo stato 10
    var                      prosecuzione allo stato 11
    func_declaration         prosecuzione allo stato 12
    assignment               prosecuzione allo stato 13


State 3

    0 $accept: program $end •

    $default  accetta


State 4

   16 func_declaration: FUNCTION • ID '(' param_list ')' $@2 compound_statement
   18                 | FUNCTION • ID '(' ')' $@3 compound_statement

    ID  shift e prosecuzione allo stato 14


State 5

    8 var_declaration: ID • declarator_list
   13 var: ID •
   14    | ID • '{' expr '}'

    ID   shift e prosecuzione allo stato 15
    '{'  shift e prosecuzione allo stato 16

    ID        [riduzione con la regola 13 (var)]
    $default  riduzione con la regola 13 (var)

    declarator_list  prosecuzione allo stato 17
    declarator       prosecuzione allo stato 10
    var              prosecuzione allo stato 11
    assignment       prosecuzione allo stato 13


State 6

    2 program: $@1 global_declaration_list •

    $default  riduzione con la regola 2 (program)


State 7

    3 global_declaration_list: global_declaration •
    4                        | global_declaration • global_declaration_list

    FUNCTION  shift e prosecuzione allo stato 4
    ID        shift e prosecuzione allo stato 5

    $default  riduzione con la regola 3 (global_declaration_list)

    global_declaration_list  prosecuzione allo stato 18
    global_declaration       prosecuzione allo stato 7
    var_declaration          prosecuzione allo stato 8
    declarator_list          prosecuzione allo stato 9
    declarator               prosecuzione allo stato 10
    var                      prosecuzione allo stato 11
    func_declaration         prosecuzione allo stato 12
    assignment               prosecuzione allo stato 13


State 8

    5 global_declaration: var_declaration •

    $default  riduzione con la regola 5 (global_declaration)


State 9

    7 var_declaration: declarator_list •

    $default  riduzione con la regola 7 (var_declaration)


State 10

    9 declarator_list: declarator •
   10                | declarator • ',' declarator_list

    ','  shift e prosecuzione allo stato 19

    $default  riduzione con la regola 9 (declarator_list)


State 11

   11 declarator: var •
   73 assignment: var • '=' expr

    '='  shift e prosecuzione allo stato 20

    $default  riduzione con la regola 11 (declarator)


State 12

    6 global_declaration: func_declaration •

    $default  riduzione con la regola 6 (global_declaration)


State 13

   12 declarator: assignment •

    $default  riduzione con la regola 12 (declarator)


State 14

   16 func_declaration: FUNCTION ID • '(' param_list ')' $@2 compound_statement
   18                 | FUNCTION ID • '(' ')' $@3 compound_statement

    '('  shift e prosecuzione allo stato 21


State 15

   13 var: ID •
   14    | ID • '{' expr '}'

    '{'  shift e prosecuzione allo stato 16

    '{'       [riduzione con la regola 13 (var)]
    $default  riduzione con la regola 13 (var)


State 16

   14 var: ID '{' • expr '}'

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 29
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 17

    8 var_declaration: ID declarator_list •

    $default  riduzione con la regola 8 (var_declaration)


State 18

    4 global_declaration_list: global_declaration global_declaration_list •

    $default  riduzione con la regola 4 (global_declaration_list)


State 19

   10 declarator_list: declarator ',' • declarator_list

    ID  shift e prosecuzione allo stato 15

    declarator_list  prosecuzione allo stato 32
    declarator       prosecuzione allo stato 10
    var              prosecuzione allo stato 11
    assignment       prosecuzione allo stato 13


State 20

   73 assignment: var '=' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 33
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 21

   16 func_declaration: FUNCTION ID '(' • param_list ')' $@2 compound_statement
   18                 | FUNCTION ID '(' • ')' $@3 compound_statement

    ID   shift e prosecuzione allo stato 34
    ')'  shift e prosecuzione allo stato 35

    param_list  prosecuzione allo stato 36
    param       prosecuzione allo stato 37


State 22

   92 number: INT_NUM •

    $default  riduzione con la regola 92 (number)


State 23

   93 number: FLOAT_NUM •

    $default  riduzione con la regola 93 (number)


State 24

   13 var: ID •
   14    | ID • '{' expr '}'
   94 func_call: ID • '(' args ')'
   95          | ID • '(' ')'

    '{'  shift e prosecuzione allo stato 16
    '('  shift e prosecuzione allo stato 38

    '{'       [riduzione con la regola 13 (var)]
    '('       [riduzione con la regola 13 (var)]
    $default  riduzione con la regola 13 (var)


State 25

   81 expr: NOT • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 39
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 26

   91 expr: '-' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 40
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 27

   90 expr: '(' • expr ')'

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 41
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 28

   74 expr: var •

    $default  riduzione con la regola 74 (expr)


State 29

   14 var: ID '{' expr • '}'
   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53
    '}'  shift e prosecuzione allo stato 54


State 30

   75 expr: number •

    $default  riduzione con la regola 75 (expr)


State 31

   76 expr: func_call •

    $default  riduzione con la regola 76 (expr)


State 32

   10 declarator_list: declarator ',' declarator_list •

    $default  riduzione con la regola 10 (declarator_list)


State 33

   73 assignment: var '=' expr •
   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 73 (assignment)


State 34

   21 param: ID •
   22      | ID • '[' ']'

    '['  shift e prosecuzione allo stato 55

    $default  riduzione con la regola 21 (param)


State 35

   18 func_declaration: FUNCTION ID '(' ')' • $@3 compound_statement

    $default  riduzione con la regola 17 ($@3)

    $@3  prosecuzione allo stato 56


State 36

   16 func_declaration: FUNCTION ID '(' param_list • ')' $@2 compound_statement

    ')'  shift e prosecuzione allo stato 57


State 37

   19 param_list: param •
   20           | param • ',' param_list

    ','  shift e prosecuzione allo stato 58

    $default  riduzione con la regola 19 (param_list)


State 38

   94 func_call: ID '(' • args ')'
   95          | ID '(' • ')'

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27
    ')'        shift e prosecuzione allo stato 59

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 60
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31
    args       prosecuzione allo stato 61


State 39

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   81     | NOT expr •
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 81 (expr)


State 40

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr
   91     | '-' expr •

    $default  riduzione con la regola 91 (expr)


State 41

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr
   90     | '(' expr • ')'

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53
    ')'  shift e prosecuzione allo stato 62


State 42

   82 expr: expr AND • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 63
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 43

   83 expr: expr OR • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 64
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 44

   84 expr: expr '>' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 65
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 45

   85 expr: expr '<' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 66
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 46

   86 expr: expr GE • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 67
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 47

   87 expr: expr LE • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 68
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 48

   88 expr: expr EQ • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 69
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 49

   89 expr: expr NE • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 70
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 50

   77 expr: expr '+' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 71
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 51

   78 expr: expr '-' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 72
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 52

   79 expr: expr '*' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 73
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 53

   80 expr: expr '/' • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 74
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 54

   14 var: ID '{' expr '}' •

    $default  riduzione con la regola 14 (var)


State 55

   22 param: ID '[' • ']'

    ']'  shift e prosecuzione allo stato 75


State 56

   18 func_declaration: FUNCTION ID '(' ')' $@3 • compound_statement

    '{'  shift e prosecuzione allo stato 76

    compound_statement  prosecuzione allo stato 77
    scope_enter         prosecuzione allo stato 78


State 57

   16 func_declaration: FUNCTION ID '(' param_list ')' • $@2 compound_statement

    $default  riduzione con la regola 15 ($@2)

    $@2  prosecuzione allo stato 79


State 58

   20 param_list: param ',' • param_list

    ID  shift e prosecuzione allo stato 34

    param_list  prosecuzione allo stato 80
    param       prosecuzione allo stato 37


State 59

   95 func_call: ID '(' ')' •

    $default  riduzione con la regola 95 (func_call)


State 60

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr
   96 args: expr •
   97     | expr • ',' args

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53
    ','  shift e prosecuzione allo stato 81

    $default  riduzione con la regola 96 (args)


State 61

   94 func_call: ID '(' args • ')'

    ')'  shift e prosecuzione allo stato 82


State 62

   90 expr: '(' expr ')' •

    $default  riduzione con la regola 90 (expr)


State 63

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   82     | expr AND expr •
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 82 (expr)


State 64

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   83     | expr OR expr •
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 83 (expr)


State 65

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   84     | expr '>' expr •
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 84 (expr)


State 66

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   85     | expr '<' expr •
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 85 (expr)


State 67

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   86     | expr GE expr •
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 86 (expr)


State 68

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   87     | expr LE expr •
   88     | expr • EQ expr
   89     | expr • NE expr

    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 87 (expr)


State 69

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   88     | expr EQ expr •
   89     | expr • NE expr

    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 88 (expr)


State 70

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr
   89     | expr NE expr •

    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 89 (expr)


State 71

   77 expr: expr • '+' expr
   77     | expr '+' expr •
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    $default  riduzione con la regola 77 (expr)


State 72

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   78     | expr '-' expr •
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    $default  riduzione con la regola 78 (expr)


State 73

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   79     | expr '*' expr •
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    $default  riduzione con la regola 79 (expr)


State 74

   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   80     | expr '/' expr •
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    $default  riduzione con la regola 80 (expr)


State 75

   22 param: ID '[' ']' •

    $default  riduzione con la regola 22 (param)


State 76

   24 scope_enter: '{' •

    $default  riduzione con la regola 24 (scope_enter)


State 77

   18 func_declaration: FUNCTION ID '(' ')' $@3 compound_statement •

    $default  riduzione con la regola 18 (func_declaration)


State 78

   23 compound_statement: scope_enter • statement_list scope_exit

    IF         shift e prosecuzione allo stato 83
    FOR        shift e prosecuzione allo stato 84
    RETURN     shift e prosecuzione allo stato 85
    PRINT      shift e prosecuzione allo stato 86
    READ       shift e prosecuzione allo stato 87
    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 88
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '{'        shift e prosecuzione allo stato 76
    '('        shift e prosecuzione allo stato 27

    var_declaration       prosecuzione allo stato 89
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 90
    compound_statement    prosecuzione allo stato 91
    scope_enter           prosecuzione allo stato 78
    statement_list        prosecuzione allo stato 92
    statement             prosecuzione allo stato 93
    expr_statement        prosecuzione allo stato 94
    selection_statement   prosecuzione allo stato 95
    iteration_statement   prosecuzione allo stato 96
    return_statement      prosecuzione allo stato 97
    printf_statement      prosecuzione allo stato 98
    read_statement        prosecuzione allo stato 99
    assignment_statement  prosecuzione allo stato 100
    assignment            prosecuzione allo stato 101
    expr                  prosecuzione allo stato 102
    number                prosecuzione allo stato 30
    func_call             prosecuzione allo stato 31


State 79

   16 func_declaration: FUNCTION ID '(' param_list ')' $@2 • compound_statement

    '{'  shift e prosecuzione allo stato 76

    compound_statement  prosecuzione allo stato 103
    scope_enter         prosecuzione allo stato 78


State 80

   20 param_list: param ',' param_list •

    $default  riduzione con la regola 20 (param_list)


State 81

   97 args: expr ',' • args

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 60
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31
    args       prosecuzione allo stato 104


State 82

   94 func_call: ID '(' args ')' •

    $default  riduzione con la regola 94 (func_call)


State 83

   48 selection_statement: IF • if_cond THEN embedded_statement END
   49                    | IF • if_cond THEN embedded_statement ELSE embedded_statement END

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    if_cond    prosecuzione allo stato 105
    expr       prosecuzione allo stato 106
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 84

   51 iteration_statement: FOR • init ',' cond ',' update DO embedded_statement

    ID  shift e prosecuzione allo stato 15

    $default  riduzione con la regola 53 (init)

    var         prosecuzione allo stato 107
    init        prosecuzione allo stato 108
    assignment  prosecuzione allo stato 109


State 85

   59 return_statement: RETURN •
   60                 | RETURN • expr

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    INT_NUM    [riduzione con la regola 59 (return_statement)]
    FLOAT_NUM  [riduzione con la regola 59 (return_statement)]
    ID         [riduzione con la regola 59 (return_statement)]
    NOT        [riduzione con la regola 59 (return_statement)]
    '-'        [riduzione con la regola 59 (return_statement)]
    '('        [riduzione con la regola 59 (return_statement)]
    $default   riduzione con la regola 59 (return_statement)

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 110
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 86

   61 printf_statement: PRINT • '(' format_string ')'
   62                 | PRINT • '(' format_string ',' args ')'
   63                 | PRINT • '(' ')'

    '('  shift e prosecuzione allo stato 111


State 87

   64 read_statement: READ • '(' format_string ',' read_var_list ')'
   65               | READ • '(' format_string ')'
   66               | READ • '(' ')'

    '('  shift e prosecuzione allo stato 112


State 88

    8 var_declaration: ID • declarator_list
   13 var: ID •
   14    | ID • '{' expr '}'
   94 func_call: ID • '(' args ')'
   95          | ID • '(' ')'

    ID   shift e prosecuzione allo stato 15
    '{'  shift e prosecuzione allo stato 16
    '('  shift e prosecuzione allo stato 38

    ID        [riduzione con la regola 13 (var)]
    '{'       [riduzione con la regola 13 (var)]
    '('       [riduzione con la regola 13 (var)]
    $default  riduzione con la regola 13 (var)

    declarator_list  prosecuzione allo stato 17
    declarator       prosecuzione allo stato 10
    var              prosecuzione allo stato 11
    assignment       prosecuzione allo stato 13


State 89

   28 statement: var_declaration •

    $default  riduzione con la regola 28 (statement)


State 90

   11 declarator: var •
   73 assignment: var • '=' expr
   74 expr: var •

    '='  shift e prosecuzione allo stato 20

    IF         riduzione con la regola 11 (declarator)
    IF         [riduzione con la regola 74 (expr)]
    ELSE       riduzione con la regola 11 (declarator)
    ELSE       [riduzione con la regola 74 (expr)]
    FOR        riduzione con la regola 11 (declarator)
    FOR        [riduzione con la regola 74 (expr)]
    END        riduzione con la regola 11 (declarator)
    END        [riduzione con la regola 74 (expr)]
    RETURN     riduzione con la regola 11 (declarator)
    RETURN     [riduzione con la regola 74 (expr)]
    PRINT      riduzione con la regola 11 (declarator)
    PRINT      [riduzione con la regola 74 (expr)]
    READ       riduzione con la regola 11 (declarator)
    READ       [riduzione con la regola 74 (expr)]
    INT_NUM    riduzione con la regola 11 (declarator)
    INT_NUM    [riduzione con la regola 74 (expr)]
    FLOAT_NUM  riduzione con la regola 11 (declarator)
    FLOAT_NUM  [riduzione con la regola 74 (expr)]
    ID         riduzione con la regola 11 (declarator)
    ID         [riduzione con la regola 74 (expr)]
    AND        riduzione con la regola 74 (expr)
    OR         riduzione con la regola 74 (expr)
    NOT        riduzione con la regola 11 (declarator)
    NOT        [riduzione con la regola 74 (expr)]
    '>'        riduzione con la regola 74 (expr)
    '<'        riduzione con la regola 74 (expr)
    GE         riduzione con la regola 74 (expr)
    LE         riduzione con la regola 74 (expr)
    EQ         riduzione con la regola 74 (expr)
    NE         riduzione con la regola 74 (expr)
    '+'        riduzione con la regola 74 (expr)
    '-'        riduzione con la regola 11 (declarator)
    '-'        [riduzione con la regola 74 (expr)]
    '*'        riduzione con la regola 74 (expr)
    '/'        riduzione con la regola 74 (expr)
    '{'        riduzione con la regola 11 (declarator)
    '{'        [riduzione con la regola 74 (expr)]
    '}'        riduzione con la regola 11 (declarator)
    '}'        [riduzione con la regola 74 (expr)]
    '('        riduzione con la regola 11 (declarator)
    '('        [riduzione con la regola 74 (expr)]
    $default   riduzione con la regola 11 (declarator)


State 91

   29 statement: compound_statement •

    $default  riduzione con la regola 29 (statement)


State 92

   23 compound_statement: scope_enter statement_list • scope_exit

    '}'  shift e prosecuzione allo stato 113

    scope_exit  prosecuzione allo stato 114


State 93

   26 statement_list: statement •
   27               | statement • statement_list

    IF         shift e prosecuzione allo stato 83
    FOR        shift e prosecuzione allo stato 84
    RETURN     shift e prosecuzione allo stato 85
    PRINT      shift e prosecuzione allo stato 86
    READ       shift e prosecuzione allo stato 87
    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 88
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '{'        shift e prosecuzione allo stato 76
    '('        shift e prosecuzione allo stato 27

    $default  riduzione con la regola 26 (statement_list)

    var_declaration       prosecuzione allo stato 89
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 90
    compound_statement    prosecuzione allo stato 91
    scope_enter           prosecuzione allo stato 78
    statement_list        prosecuzione allo stato 115
    statement             prosecuzione allo stato 93
    expr_statement        prosecuzione allo stato 94
    selection_statement   prosecuzione allo stato 95
    iteration_statement   prosecuzione allo stato 96
    return_statement      prosecuzione allo stato 97
    printf_statement      prosecuzione allo stato 98
    read_statement        prosecuzione allo stato 99
    assignment_statement  prosecuzione allo stato 100
    assignment            prosecuzione allo stato 101
    expr                  prosecuzione allo stato 102
    number                prosecuzione allo stato 30
    func_call             prosecuzione allo stato 31


State 94

   30 statement: expr_statement •

    $default  riduzione con la regola 30 (statement)


State 95

   31 statement: selection_statement •

    $default  riduzione con la regola 31 (statement)


State 96

   32 statement: iteration_statement •

    $default  riduzione con la regola 32 (statement)


State 97

   33 statement: return_statement •

    $default  riduzione con la regola 33 (statement)


State 98

   34 statement: printf_statement •

    $default  riduzione con la regola 34 (statement)


State 99

   35 statement: read_statement •

    $default  riduzione con la regola 35 (statement)


State 100

   36 statement: assignment_statement •

    $default  riduzione con la regola 36 (statement)


State 101

   12 declarator: assignment •
   72 assignment_statement: assignment •

    IF         riduzione con la regola 12 (declarator)
    IF         [riduzione con la regola 72 (assignment_statement)]
    ELSE       riduzione con la regola 12 (declarator)
    ELSE       [riduzione con la regola 72 (assignment_statement)]
    FOR        riduzione con la regola 12 (declarator)
    FOR        [riduzione con la regola 72 (assignment_statement)]
    END        riduzione con la regola 12 (declarator)
    END        [riduzione con la regola 72 (assignment_statement)]
    RETURN     riduzione con la regola 12 (declarator)
    RETURN     [riduzione con la regola 72 (assignment_statement)]
    PRINT      riduzione con la regola 12 (declarator)
    PRINT      [riduzione con la regola 72 (assignment_statement)]
    READ       riduzione con la regola 12 (declarator)
    READ       [riduzione con la regola 72 (assignment_statement)]
    INT_NUM    riduzione con la regola 12 (declarator)
    INT_NUM    [riduzione con la regola 72 (assignment_statement)]
    FLOAT_NUM  riduzione con la regola 12 (declarator)
    FLOAT_NUM  [riduzione con la regola 72 (assignment_statement)]
    ID         riduzione con la regola 12 (declarator)
    ID         [riduzione con la regola 72 (assignment_statement)]
    NOT        riduzione con la regola 12 (declarator)
    NOT        [riduzione con la regola 72 (assignment_statement)]
    '-'        riduzione con la regola 12 (declarator)
    '-'        [riduzione con la regola 72 (assignment_statement)]
    '{'        riduzione con la regola 12 (declarator)
    '{'        [riduzione con la regola 72 (assignment_statement)]
    '}'        riduzione con la regola 12 (declarator)
    '}'        [riduzione con la regola 72 (assignment_statement)]
    '('        riduzione con la regola 12 (declarator)
    '('        [riduzione con la regola 72 (assignment_statement)]
    $default   riduzione con la regola 12 (declarator)


State 102

   47 expr_statement: expr •
   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    '-'       [riduzione con la regola 47 (expr_statement)]
    $default  riduzione con la regola 47 (expr_statement)


State 103

   16 func_declaration: FUNCTION ID '(' param_list ')' $@2 compound_statement •

    $default  riduzione con la regola 16 (func_declaration)


State 104

   97 args: expr ',' args •

    $default  riduzione con la regola 97 (args)


State 105

   48 selection_statement: IF if_cond • THEN embedded_statement END
   49                    | IF if_cond • THEN embedded_statement ELSE embedded_statement END

    THEN  shift e prosecuzione allo stato 116


State 106

   50 if_cond: expr •
   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 50 (if_cond)


State 107

   73 assignment: var • '=' expr

    '='  shift e prosecuzione allo stato 20


State 108

   51 iteration_statement: FOR init • ',' cond ',' update DO embedded_statement

    ','  shift e prosecuzione allo stato 117


State 109

   52 init: assignment •

    $default  riduzione con la regola 52 (init)


State 110

   60 return_statement: RETURN expr •
   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    '-'       [riduzione con la regola 60 (return_statement)]
    $default  riduzione con la regola 60 (return_statement)


State 111

   61 printf_statement: PRINT '(' • format_string ')'
   62                 | PRINT '(' • format_string ',' args ')'
   63                 | PRINT '(' • ')'

    STRING  shift e prosecuzione allo stato 118
    ')'     shift e prosecuzione allo stato 119

    format_string  prosecuzione allo stato 120


State 112

   64 read_statement: READ '(' • format_string ',' read_var_list ')'
   65               | READ '(' • format_string ')'
   66               | READ '(' • ')'

    STRING  shift e prosecuzione allo stato 118
    ')'     shift e prosecuzione allo stato 121

    format_string  prosecuzione allo stato 122


State 113

   25 scope_exit: '}' •

    $default  riduzione con la regola 25 (scope_exit)


State 114

   23 compound_statement: scope_enter statement_list scope_exit •

    $default  riduzione con la regola 23 (compound_statement)


State 115

   27 statement_list: statement statement_list •

    $default  riduzione con la regola 27 (statement_list)


State 116

   48 selection_statement: IF if_cond THEN • embedded_statement END
   49                    | IF if_cond THEN • embedded_statement ELSE embedded_statement END

    IF         shift e prosecuzione allo stato 83
    FOR        shift e prosecuzione allo stato 84
    RETURN     shift e prosecuzione allo stato 85
    PRINT      shift e prosecuzione allo stato 86
    READ       shift e prosecuzione allo stato 87
    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 88
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '{'        shift e prosecuzione allo stato 76
    '('        shift e prosecuzione allo stato 27

    var_declaration       prosecuzione allo stato 123
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 90
    compound_statement    prosecuzione allo stato 124
    scope_enter           prosecuzione allo stato 78
    embedded_statement    prosecuzione allo stato 125
    single_statement      prosecuzione allo stato 126
    expr_statement        prosecuzione allo stato 127
    selection_statement   prosecuzione allo stato 128
    iteration_statement   prosecuzione allo stato 129
    return_statement      prosecuzione allo stato 130
    printf_statement      prosecuzione allo stato 131
    read_statement        prosecuzione allo stato 132
    assignment_statement  prosecuzione allo stato 133
    assignment            prosecuzione allo stato 101
    expr                  prosecuzione allo stato 102
    number                prosecuzione allo stato 30
    func_call             prosecuzione allo stato 31


State 117

   51 iteration_statement: FOR init ',' • cond ',' update DO embedded_statement

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    $default  riduzione con la regola 55 (cond)

    var        prosecuzione allo stato 28
    cond       prosecuzione allo stato 134
    expr       prosecuzione allo stato 135
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31


State 118

   71 format_string: STRING •

    $default  riduzione con la regola 71 (format_string)


State 119

   63 printf_statement: PRINT '(' ')' •

    $default  riduzione con la regola 63 (printf_statement)


State 120

   61 printf_statement: PRINT '(' format_string • ')'
   62                 | PRINT '(' format_string • ',' args ')'

    ','  shift e prosecuzione allo stato 136
    ')'  shift e prosecuzione allo stato 137


State 121

   66 read_statement: READ '(' ')' •

    $default  riduzione con la regola 66 (read_statement)


State 122

   64 read_statement: READ '(' format_string • ',' read_var_list ')'
   65               | READ '(' format_string • ')'

    ','  shift e prosecuzione allo stato 138
    ')'  shift e prosecuzione allo stato 139


State 123

   39 single_statement: var_declaration •

    $default  riduzione con la regola 39 (single_statement)


State 124

   37 embedded_statement: compound_statement •

    $default  riduzione con la regola 37 (embedded_statement)


State 125

   48 selection_statement: IF if_cond THEN embedded_statement • END
   49                    | IF if_cond THEN embedded_statement • ELSE embedded_statement END

    ELSE  shift e prosecuzione allo stato 140
    END   shift e prosecuzione allo stato 141


State 126

   38 embedded_statement: single_statement •

    $default  riduzione con la regola 38 (embedded_statement)


State 127

   40 single_statement: expr_statement •

    $default  riduzione con la regola 40 (single_statement)


State 128

   41 single_statement: selection_statement •

    $default  riduzione con la regola 41 (single_statement)


State 129

   42 single_statement: iteration_statement •

    $default  riduzione con la regola 42 (single_statement)


State 130

   43 single_statement: return_statement •

    $default  riduzione con la regola 43 (single_statement)


State 131

   44 single_statement: printf_statement •

    $default  riduzione con la regola 44 (single_statement)


State 132

   45 single_statement: read_statement •

    $default  riduzione con la regola 45 (single_statement)


State 133

   46 single_statement: assignment_statement •

    $default  riduzione con la regola 46 (single_statement)


State 134

   51 iteration_statement: FOR init ',' cond • ',' update DO embedded_statement

    ','  shift e prosecuzione allo stato 142


State 135

   54 cond: expr •
   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 54 (cond)


State 136

   62 printf_statement: PRINT '(' format_string ',' • args ')'

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    var        prosecuzione allo stato 28
    expr       prosecuzione allo stato 60
    number     prosecuzione allo stato 30
    func_call  prosecuzione allo stato 31
    args       prosecuzione allo stato 143


State 137

   61 printf_statement: PRINT '(' format_string ')' •

    $default  riduzione con la regola 61 (printf_statement)


State 138

   64 read_statement: READ '(' format_string ',' • read_var_list ')'

    ID   shift e prosecuzione allo stato 15
    '&'  shift e prosecuzione allo stato 144

    var            prosecuzione allo stato 145
    read_var_list  prosecuzione allo stato 146


State 139

   65 read_statement: READ '(' format_string ')' •

    $default  riduzione con la regola 65 (read_statement)


State 140

   49 selection_statement: IF if_cond THEN embedded_statement ELSE • embedded_statement END

    IF         shift e prosecuzione allo stato 83
    FOR        shift e prosecuzione allo stato 84
    RETURN     shift e prosecuzione allo stato 85
    PRINT      shift e prosecuzione allo stato 86
    READ       shift e prosecuzione allo stato 87
    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 88
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '{'        shift e prosecuzione allo stato 76
    '('        shift e prosecuzione allo stato 27

    var_declaration       prosecuzione allo stato 123
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 90
    compound_statement    prosecuzione allo stato 124
    scope_enter           prosecuzione allo stato 78
    embedded_statement    prosecuzione allo stato 147
    single_statement      prosecuzione allo stato 126
    expr_statement        prosecuzione allo stato 127
    selection_statement   prosecuzione allo stato 128
    iteration_statement   prosecuzione allo stato 129
    return_statement      prosecuzione allo stato 130
    printf_statement      prosecuzione allo stato 131
    read_statement        prosecuzione allo stato 132
    assignment_statement  prosecuzione allo stato 133
    assignment            prosecuzione allo stato 101
    expr                  prosecuzione allo stato 102
    number                prosecuzione allo stato 30
    func_call             prosecuzione allo stato 31


State 141

   48 selection_statement: IF if_cond THEN embedded_statement END •

    $default  riduzione con la regola 48 (selection_statement)


State 142

   51 iteration_statement: FOR init ',' cond ',' • update DO embedded_statement

    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 24
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '('        shift e prosecuzione allo stato 27

    $default  riduzione con la regola 58 (update)

    var         prosecuzione allo stato 148
    update      prosecuzione allo stato 149
    assignment  prosecuzione allo stato 150
    expr        prosecuzione allo stato 151
    number      prosecuzione allo stato 30
    func_call   prosecuzione allo stato 31


State 143

   62 printf_statement: PRINT '(' format_string ',' args • ')'

    ')'  shift e prosecuzione allo stato 152


State 144

   67 read_var_list: '&' • var
   69              | '&' • var ',' read_var_list

    ID  shift e prosecuzione allo stato 15

    var  prosecuzione allo stato 153


State 145

   68 read_var_list: var •
   70              | var • ',' read_var_list

    ','  shift e prosecuzione allo stato 154

    $default  riduzione con la regola 68 (read_var_list)


State 146

   64 read_statement: READ '(' format_string ',' read_var_list • ')'

    ')'  shift e prosecuzione allo stato 155


State 147

   49 selection_statement: IF if_cond THEN embedded_statement ELSE embedded_statement • END

    END  shift e prosecuzione allo stato 156


State 148

   73 assignment: var • '=' expr
   74 expr: var •

    '='  shift e prosecuzione allo stato 20

    $default  riduzione con la regola 74 (expr)


State 149

   51 iteration_statement: FOR init ',' cond ',' update • DO embedded_statement

    DO  shift e prosecuzione allo stato 157


State 150

   56 update: assignment •

    $default  riduzione con la regola 56 (update)


State 151

   57 update: expr •
   77 expr: expr • '+' expr
   78     | expr • '-' expr
   79     | expr • '*' expr
   80     | expr • '/' expr
   82     | expr • AND expr
   83     | expr • OR expr
   84     | expr • '>' expr
   85     | expr • '<' expr
   86     | expr • GE expr
   87     | expr • LE expr
   88     | expr • EQ expr
   89     | expr • NE expr

    AND  shift e prosecuzione allo stato 42
    OR   shift e prosecuzione allo stato 43
    '>'  shift e prosecuzione allo stato 44
    '<'  shift e prosecuzione allo stato 45
    GE   shift e prosecuzione allo stato 46
    LE   shift e prosecuzione allo stato 47
    EQ   shift e prosecuzione allo stato 48
    NE   shift e prosecuzione allo stato 49
    '+'  shift e prosecuzione allo stato 50
    '-'  shift e prosecuzione allo stato 51
    '*'  shift e prosecuzione allo stato 52
    '/'  shift e prosecuzione allo stato 53

    $default  riduzione con la regola 57 (update)


State 152

   62 printf_statement: PRINT '(' format_string ',' args ')' •

    $default  riduzione con la regola 62 (printf_statement)


State 153

   67 read_var_list: '&' var •
   69              | '&' var • ',' read_var_list

    ','  shift e prosecuzione allo stato 158

    $default  riduzione con la regola 67 (read_var_list)


State 154

   70 read_var_list: var ',' • read_var_list

    ID   shift e prosecuzione allo stato 15
    '&'  shift e prosecuzione allo stato 144

    var            prosecuzione allo stato 145
    read_var_list  prosecuzione allo stato 159


State 155

   64 read_statement: READ '(' format_string ',' read_var_list ')' •

    $default  riduzione con la regola 64 (read_statement)


State 156

   49 selection_statement: IF if_cond THEN embedded_statement ELSE embedded_statement END •

    $default  riduzione con la regola 49 (selection_statement)


State 157

   51 iteration_statement: FOR init ',' cond ',' update DO • embedded_statement

    IF         shift e prosecuzione allo stato 83
    FOR        shift e prosecuzione allo stato 84
    RETURN     shift e prosecuzione allo stato 85
    PRINT      shift e prosecuzione allo stato 86
    READ       shift e prosecuzione allo stato 87
    INT_NUM    shift e prosecuzione allo stato 22
    FLOAT_NUM  shift e prosecuzione allo stato 23
    ID         shift e prosecuzione allo stato 88
    NOT        shift e prosecuzione allo stato 25
    '-'        shift e prosecuzione allo stato 26
    '{'        shift e prosecuzione allo stato 76
    '('        shift e prosecuzione allo stato 27

    var_declaration       prosecuzione allo stato 123
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 90
    compound_statement    prosecuzione allo stato 124
    scope_enter           prosecuzione allo stato 78
    embedded_statement    prosecuzione allo stato 160
    single_statement      prosecuzione allo stato 126
    expr_statement        prosecuzione allo stato 127
    selection_statement   prosecuzione allo stato 128
    iteration_statement   prosecuzione allo stato 129
    return_statement      prosecuzione allo stato 130
    printf_statement      prosecuzione allo stato 131
    read_statement        prosecuzione allo stato 132
    assignment_statement  prosecuzione allo stato 133
    assignment            prosecuzione allo stato 101
    expr                  prosecuzione allo stato 102
    number                prosecuzione allo stato 30
    func_call             prosecuzione allo stato 31


State 158

   69 read_var_list: '&' var ',' • read_var_list

    ID   shift e prosecuzione allo stato 15
    '&'  shift e prosecuzione allo stato 144

    var            prosecuzione allo stato 145
    read_var_list  prosecuzione allo stato 161


State 159

   70 read_var_list: var ',' read_var_list •

    $default  riduzione con la regola 70 (read_var_list)


State 160

   51 iteration_statement: FOR init ',' cond ',' update DO embedded_statement •

    $default  riduzione con la regola 51 (iteration_statement)


State 161

   69 read_var_list: '&' var ',' read_var_list •

    $default  riduzione con la regola 69 (read_var_list)
