Terminals which are not used

   NIL
   BOOL


State 24 conflicts: 2 shift/reduce
State 85 conflicts: 6 shift/reduce
State 88 conflicts: 3 shift/reduce
State 100 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 @1: /* empty */

    2 program: @1 global_declaration_list

    3 global_declaration_list: global_declaration
    4                        | global_declaration global_declaration_list

    5 global_declaration: var_declaration
    6                   | func_declaration

    7 var_declaration: declarator_list
    8                | ID declarator_list

    9 declarator_list: declarator
   10                | declarator ',' declarator_list

   11 declarator: assignment

   12 var: ID
   13    | ID '{' expr '}'

   14 @2: /* empty */

   15 func_declaration: FUNCTION ID '(' param_list ')' @2 compound_statement

   16 @3: /* empty */

   17 func_declaration: FUNCTION ID '(' ')' @3 compound_statement

   18 param_list: param
   19           | param ',' param_list

   20 param: ID
   21      | ID '[' ']'

   22 compound_statement: scope_enter statement_list scope_exit

   23 scope_enter: '{'

   24 scope_exit: '}'

   25 statement_list: statement
   26               | statement statement_list

   27 statement: var_declaration
   28          | compound_statement
   29          | expr_statement
   30          | selection_statement
   31          | iteration_statement
   32          | return_statement
   33          | printf_statement
   34          | read_statement

   35 embedded_statement: compound_statement
   36                   | single_statement

   37 single_statement: var_declaration
   38                 | expr_statement
   39                 | selection_statement
   40                 | iteration_statement
   41                 | return_statement
   42                 | printf_statement
   43                 | read_statement

   44 expr_statement: expr

   45 selection_statement: IF if_cond THEN embedded_statement END
   46                    | IF if_cond THEN embedded_statement ELSE embedded_statement END

   47 if_cond: expr

   48 iteration_statement: FOR init ',' cond ',' update DO embedded_statement

   49 init: assignment
   50     | /* empty */

   51 cond: expr
   52     | /* empty */

   53 update: assignment
   54       | expr
   55       | /* empty */

   56 return_statement: RETURN
   57                 | RETURN expr

   58 printf_statement: PRINT '(' format_string ')'
   59                 | PRINT '(' format_string ',' args ')'
   60                 | PRINT '(' ')'

   61 read_statement: READ '(' format_string ',' read_var_list ')'
   62               | READ '(' format_string ')'
   63               | READ '(' ')'

   64 read_var_list: '&' var
   65              | var
   66              | '&' var ',' read_var_list
   67              | var ',' read_var_list

   68 format_string: STRING

   69 assignment: var '=' expr

   70 expr: var
   71     | number
   72     | func_call
   73     | expr '+' expr
   74     | expr '-' expr
   75     | expr '*' expr
   76     | expr '/' expr
   77     | NOT expr
   78     | expr AND expr
   79     | expr OR expr
   80     | expr '>' expr
   81     | expr '<' expr
   82     | expr GE expr
   83     | expr LE expr
   84     | expr EQ expr
   85     | expr NE expr
   86     | '(' expr ')'
   87     | '-' expr

   88 number: INT_NUM
   89       | FLOAT_NUM

   90 func_call: ID '(' args ')'
   91          | ID '(' ')'

   92 args: expr
   93     | expr ',' args


Terminals, with rules where they appear

$end (0) 0
'&' (38) 64 66
'(' (40) 15 17 58 59 60 61 62 63 86 90 91
')' (41) 15 17 58 59 60 61 62 63 86 90 91
'*' (42) 75
'+' (43) 73
',' (44) 10 19 48 59 61 66 67 93
'-' (45) 74 87
'/' (47) 76
'<' (60) 81
'=' (61) 69
'>' (62) 80
'[' (91) 21
']' (93) 21
'{' (123) 13 23
'}' (125) 13 24
error (256)
IF (258) 45 46
ELSE (259) 46
THEN (260) 45 46
FOR (261) 48
DO (262) 48
END (263) 45 46
RETURN (264) 56 57
FUNCTION (265) 15 17
PRINT (266) 58 59 60
READ (267) 61 62 63
NIL (268)
STRING (269) 68
BOOL (270)
INT_NUM (271) 88
FLOAT_NUM (272) 89
ID (273) 8 12 13 15 17 20 21 90 91
NOT (274) 77
OR (275) 79
AND (276) 78
NE (277) 85
EQ (278) 84
LE (279) 83
GE (280) 82
MINUS (281)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 2, on right: 0
@1 (44)
    on left: 1, on right: 2
global_declaration_list (45)
    on left: 3 4, on right: 2 4
global_declaration (46)
    on left: 5 6, on right: 3 4
var_declaration (47)
    on left: 7 8, on right: 5 27 37
declarator_list (48)
    on left: 9 10, on right: 7 8 10
declarator (49)
    on left: 11, on right: 9 10
var (50)
    on left: 12 13, on right: 64 65 66 67 69 70
func_declaration (51)
    on left: 15 17, on right: 6
@2 (52)
    on left: 14, on right: 15
@3 (53)
    on left: 16, on right: 17
param_list (54)
    on left: 18 19, on right: 15 19
param (55)
    on left: 20 21, on right: 18 19
compound_statement (56)
    on left: 22, on right: 15 17 28 35
scope_enter (57)
    on left: 23, on right: 22
scope_exit (58)
    on left: 24, on right: 22
statement_list (59)
    on left: 25 26, on right: 22 26
statement (60)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
embedded_statement (61)
    on left: 35 36, on right: 45 46 48
single_statement (62)
    on left: 37 38 39 40 41 42 43, on right: 36
expr_statement (63)
    on left: 44, on right: 29 38
selection_statement (64)
    on left: 45 46, on right: 30 39
if_cond (65)
    on left: 47, on right: 45 46
iteration_statement (66)
    on left: 48, on right: 31 40
init (67)
    on left: 49 50, on right: 48
cond (68)
    on left: 51 52, on right: 48
update (69)
    on left: 53 54 55, on right: 48
return_statement (70)
    on left: 56 57, on right: 32 41
printf_statement (71)
    on left: 58 59 60, on right: 33 42
read_statement (72)
    on left: 61 62 63, on right: 34 43
read_var_list (73)
    on left: 64 65 66 67, on right: 61 66 67
format_string (74)
    on left: 68, on right: 58 59 61 62
assignment (75)
    on left: 69, on right: 11 49 53
expr (76)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
   , on right: 13 44 47 51 54 57 69 73 74 75 76 77 78 79 80 81 82 83
    84 85 86 87 92 93
number (77)
    on left: 88 89, on right: 71
func_call (78)
    on left: 90 91, on right: 72
args (79)
    on left: 92 93, on right: 59 90 93


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (@1)

    program  go to state 1
    @1       go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    2 program: @1 . global_declaration_list

    FUNCTION  shift, and go to state 4
    ID        shift, and go to state 5

    global_declaration_list  go to state 6
    global_declaration       go to state 7
    var_declaration          go to state 8
    declarator_list          go to state 9
    declarator               go to state 10
    var                      go to state 11
    func_declaration         go to state 12
    assignment               go to state 13


state 3

    0 $accept: program $end .

    $default  accept


state 4

   15 func_declaration: FUNCTION . ID '(' param_list ')' @2 compound_statement
   17                 | FUNCTION . ID '(' ')' @3 compound_statement

    ID  shift, and go to state 14


state 5

    8 var_declaration: ID . declarator_list
   12 var: ID .
   13    | ID . '{' expr '}'

    ID   shift, and go to state 15
    '{'  shift, and go to state 16

    $default  reduce using rule 12 (var)

    declarator_list  go to state 17
    declarator       go to state 10
    var              go to state 11
    assignment       go to state 13


state 6

    2 program: @1 global_declaration_list .

    $default  reduce using rule 2 (program)


state 7

    3 global_declaration_list: global_declaration .
    4                        | global_declaration . global_declaration_list

    FUNCTION  shift, and go to state 4
    ID        shift, and go to state 5

    $default  reduce using rule 3 (global_declaration_list)

    global_declaration_list  go to state 18
    global_declaration       go to state 7
    var_declaration          go to state 8
    declarator_list          go to state 9
    declarator               go to state 10
    var                      go to state 11
    func_declaration         go to state 12
    assignment               go to state 13


state 8

    5 global_declaration: var_declaration .

    $default  reduce using rule 5 (global_declaration)


state 9

    7 var_declaration: declarator_list .

    $default  reduce using rule 7 (var_declaration)


state 10

    9 declarator_list: declarator .
   10                | declarator . ',' declarator_list

    ','  shift, and go to state 19

    $default  reduce using rule 9 (declarator_list)


state 11

   69 assignment: var . '=' expr

    '='  shift, and go to state 20


state 12

    6 global_declaration: func_declaration .

    $default  reduce using rule 6 (global_declaration)


state 13

   11 declarator: assignment .

    $default  reduce using rule 11 (declarator)


state 14

   15 func_declaration: FUNCTION ID . '(' param_list ')' @2 compound_statement
   17                 | FUNCTION ID . '(' ')' @3 compound_statement

    '('  shift, and go to state 21


state 15

   12 var: ID .
   13    | ID . '{' expr '}'

    '{'  shift, and go to state 16

    $default  reduce using rule 12 (var)


state 16

   13 var: ID '{' . expr '}'

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 29
    number     go to state 30
    func_call  go to state 31


state 17

    8 var_declaration: ID declarator_list .

    $default  reduce using rule 8 (var_declaration)


state 18

    4 global_declaration_list: global_declaration global_declaration_list .

    $default  reduce using rule 4 (global_declaration_list)


state 19

   10 declarator_list: declarator ',' . declarator_list

    ID  shift, and go to state 15

    declarator_list  go to state 32
    declarator       go to state 10
    var              go to state 11
    assignment       go to state 13


state 20

   69 assignment: var '=' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 33
    number     go to state 30
    func_call  go to state 31


state 21

   15 func_declaration: FUNCTION ID '(' . param_list ')' @2 compound_statement
   17                 | FUNCTION ID '(' . ')' @3 compound_statement

    ID   shift, and go to state 34
    ')'  shift, and go to state 35

    param_list  go to state 36
    param       go to state 37


state 22

   88 number: INT_NUM .

    $default  reduce using rule 88 (number)


state 23

   89 number: FLOAT_NUM .

    $default  reduce using rule 89 (number)


state 24

   12 var: ID .
   13    | ID . '{' expr '}'
   90 func_call: ID . '(' args ')'
   91          | ID . '(' ')'

    '{'  shift, and go to state 16
    '('  shift, and go to state 38

    '{'       [reduce using rule 12 (var)]
    '('       [reduce using rule 12 (var)]
    $default  reduce using rule 12 (var)


state 25

   77 expr: NOT . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 39
    number     go to state 30
    func_call  go to state 31


state 26

   87 expr: '-' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 40
    number     go to state 30
    func_call  go to state 31


state 27

   86 expr: '(' . expr ')'

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 41
    number     go to state 30
    func_call  go to state 31


state 28

   70 expr: var .

    $default  reduce using rule 70 (expr)


state 29

   13 var: ID '{' expr . '}'
   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    '}'  shift, and go to state 54


state 30

   71 expr: number .

    $default  reduce using rule 71 (expr)


state 31

   72 expr: func_call .

    $default  reduce using rule 72 (expr)


state 32

   10 declarator_list: declarator ',' declarator_list .

    $default  reduce using rule 10 (declarator_list)


state 33

   69 assignment: var '=' expr .
   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 69 (assignment)


state 34

   20 param: ID .
   21      | ID . '[' ']'

    '['  shift, and go to state 55

    $default  reduce using rule 20 (param)


state 35

   17 func_declaration: FUNCTION ID '(' ')' . @3 compound_statement

    $default  reduce using rule 16 (@3)

    @3  go to state 56


state 36

   15 func_declaration: FUNCTION ID '(' param_list . ')' @2 compound_statement

    ')'  shift, and go to state 57


state 37

   18 param_list: param .
   19           | param . ',' param_list

    ','  shift, and go to state 58

    $default  reduce using rule 18 (param_list)


state 38

   90 func_call: ID '(' . args ')'
   91          | ID '(' . ')'

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27
    ')'        shift, and go to state 59

    var        go to state 28
    expr       go to state 60
    number     go to state 30
    func_call  go to state 31
    args       go to state 61


state 39

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   77     | NOT expr .
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 77 (expr)


state 40

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr
   87     | '-' expr .

    $default  reduce using rule 87 (expr)


state 41

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | '(' expr . ')'

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    ')'  shift, and go to state 62


state 42

   79 expr: expr OR . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 63
    number     go to state 30
    func_call  go to state 31


state 43

   78 expr: expr AND . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 64
    number     go to state 30
    func_call  go to state 31


state 44

   80 expr: expr '>' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 65
    number     go to state 30
    func_call  go to state 31


state 45

   81 expr: expr '<' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 66
    number     go to state 30
    func_call  go to state 31


state 46

   85 expr: expr NE . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 67
    number     go to state 30
    func_call  go to state 31


state 47

   84 expr: expr EQ . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 68
    number     go to state 30
    func_call  go to state 31


state 48

   83 expr: expr LE . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 69
    number     go to state 30
    func_call  go to state 31


state 49

   82 expr: expr GE . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 70
    number     go to state 30
    func_call  go to state 31


state 50

   73 expr: expr '+' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 71
    number     go to state 30
    func_call  go to state 31


state 51

   74 expr: expr '-' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 72
    number     go to state 30
    func_call  go to state 31


state 52

   75 expr: expr '*' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 73
    number     go to state 30
    func_call  go to state 31


state 53

   76 expr: expr '/' . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 74
    number     go to state 30
    func_call  go to state 31


state 54

   13 var: ID '{' expr '}' .

    $default  reduce using rule 13 (var)


state 55

   21 param: ID '[' . ']'

    ']'  shift, and go to state 75


state 56

   17 func_declaration: FUNCTION ID '(' ')' @3 . compound_statement

    '{'  shift, and go to state 76

    compound_statement  go to state 77
    scope_enter         go to state 78


state 57

   15 func_declaration: FUNCTION ID '(' param_list ')' . @2 compound_statement

    $default  reduce using rule 14 (@2)

    @2  go to state 79


state 58

   19 param_list: param ',' . param_list

    ID  shift, and go to state 34

    param_list  go to state 80
    param       go to state 37


state 59

   91 func_call: ID '(' ')' .

    $default  reduce using rule 91 (func_call)


state 60

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr
   92 args: expr .
   93     | expr . ',' args

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    ','  shift, and go to state 81

    $default  reduce using rule 92 (args)


state 61

   90 func_call: ID '(' args . ')'

    ')'  shift, and go to state 82


state 62

   86 expr: '(' expr ')' .

    $default  reduce using rule 86 (expr)


state 63

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   79     | expr OR expr .
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 79 (expr)


state 64

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   78     | expr AND expr .
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 78 (expr)


state 65

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   80     | expr '>' expr .
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 80 (expr)


state 66

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   81     | expr '<' expr .
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 81 (expr)


state 67

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr
   85     | expr NE expr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 85 (expr)


state 68

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   84     | expr EQ expr .
   85     | expr . NE expr

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 84 (expr)


state 69

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   83     | expr LE expr .
   84     | expr . EQ expr
   85     | expr . NE expr

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 83 (expr)


state 70

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   82     | expr GE expr .
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 82 (expr)


state 71

   73 expr: expr . '+' expr
   73     | expr '+' expr .
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    $default  reduce using rule 73 (expr)


state 72

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   74     | expr '-' expr .
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    $default  reduce using rule 74 (expr)


state 73

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   75     | expr '*' expr .
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    $default  reduce using rule 75 (expr)


state 74

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   76     | expr '/' expr .
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    $default  reduce using rule 76 (expr)


state 75

   21 param: ID '[' ']' .

    $default  reduce using rule 21 (param)


state 76

   23 scope_enter: '{' .

    $default  reduce using rule 23 (scope_enter)


state 77

   17 func_declaration: FUNCTION ID '(' ')' @3 compound_statement .

    $default  reduce using rule 17 (func_declaration)


state 78

   22 compound_statement: scope_enter . statement_list scope_exit

    IF         shift, and go to state 83
    FOR        shift, and go to state 84
    RETURN     shift, and go to state 85
    PRINT      shift, and go to state 86
    READ       shift, and go to state 87
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 88
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '{'        shift, and go to state 76
    '('        shift, and go to state 27

    var_declaration      go to state 89
    declarator_list      go to state 9
    declarator           go to state 10
    var                  go to state 90
    compound_statement   go to state 91
    scope_enter          go to state 78
    statement_list       go to state 92
    statement            go to state 93
    expr_statement       go to state 94
    selection_statement  go to state 95
    iteration_statement  go to state 96
    return_statement     go to state 97
    printf_statement     go to state 98
    read_statement       go to state 99
    assignment           go to state 13
    expr                 go to state 100
    number               go to state 30
    func_call            go to state 31


state 79

   15 func_declaration: FUNCTION ID '(' param_list ')' @2 . compound_statement

    '{'  shift, and go to state 76

    compound_statement  go to state 101
    scope_enter         go to state 78


state 80

   19 param_list: param ',' param_list .

    $default  reduce using rule 19 (param_list)


state 81

   93 args: expr ',' . args

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 60
    number     go to state 30
    func_call  go to state 31
    args       go to state 102


state 82

   90 func_call: ID '(' args ')' .

    $default  reduce using rule 90 (func_call)


state 83

   45 selection_statement: IF . if_cond THEN embedded_statement END
   46                    | IF . if_cond THEN embedded_statement ELSE embedded_statement END

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    if_cond    go to state 103
    expr       go to state 104
    number     go to state 30
    func_call  go to state 31


state 84

   48 iteration_statement: FOR . init ',' cond ',' update DO embedded_statement

    ID  shift, and go to state 15

    $default  reduce using rule 50 (init)

    var         go to state 11
    init        go to state 105
    assignment  go to state 106


state 85

   56 return_statement: RETURN .
   57                 | RETURN . expr

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    INT_NUM    [reduce using rule 56 (return_statement)]
    FLOAT_NUM  [reduce using rule 56 (return_statement)]
    ID         [reduce using rule 56 (return_statement)]
    NOT        [reduce using rule 56 (return_statement)]
    '-'        [reduce using rule 56 (return_statement)]
    '('        [reduce using rule 56 (return_statement)]
    $default   reduce using rule 56 (return_statement)

    var        go to state 28
    expr       go to state 107
    number     go to state 30
    func_call  go to state 31


state 86

   58 printf_statement: PRINT . '(' format_string ')'
   59                 | PRINT . '(' format_string ',' args ')'
   60                 | PRINT . '(' ')'

    '('  shift, and go to state 108


state 87

   61 read_statement: READ . '(' format_string ',' read_var_list ')'
   62               | READ . '(' format_string ')'
   63               | READ . '(' ')'

    '('  shift, and go to state 109


state 88

    8 var_declaration: ID . declarator_list
   12 var: ID .
   13    | ID . '{' expr '}'
   90 func_call: ID . '(' args ')'
   91          | ID . '(' ')'

    ID   shift, and go to state 15
    '{'  shift, and go to state 16
    '('  shift, and go to state 38

    ID        [reduce using rule 12 (var)]
    '{'       [reduce using rule 12 (var)]
    '('       [reduce using rule 12 (var)]
    $default  reduce using rule 12 (var)

    declarator_list  go to state 17
    declarator       go to state 10
    var              go to state 11
    assignment       go to state 13


state 89

   27 statement: var_declaration .

    $default  reduce using rule 27 (statement)


state 90

   69 assignment: var . '=' expr
   70 expr: var .

    '='  shift, and go to state 20

    $default  reduce using rule 70 (expr)


state 91

   28 statement: compound_statement .

    $default  reduce using rule 28 (statement)


state 92

   22 compound_statement: scope_enter statement_list . scope_exit

    '}'  shift, and go to state 110

    scope_exit  go to state 111


state 93

   25 statement_list: statement .
   26               | statement . statement_list

    IF         shift, and go to state 83
    FOR        shift, and go to state 84
    RETURN     shift, and go to state 85
    PRINT      shift, and go to state 86
    READ       shift, and go to state 87
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 88
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '{'        shift, and go to state 76
    '('        shift, and go to state 27

    $default  reduce using rule 25 (statement_list)

    var_declaration      go to state 89
    declarator_list      go to state 9
    declarator           go to state 10
    var                  go to state 90
    compound_statement   go to state 91
    scope_enter          go to state 78
    statement_list       go to state 112
    statement            go to state 93
    expr_statement       go to state 94
    selection_statement  go to state 95
    iteration_statement  go to state 96
    return_statement     go to state 97
    printf_statement     go to state 98
    read_statement       go to state 99
    assignment           go to state 13
    expr                 go to state 100
    number               go to state 30
    func_call            go to state 31


state 94

   29 statement: expr_statement .

    $default  reduce using rule 29 (statement)


state 95

   30 statement: selection_statement .

    $default  reduce using rule 30 (statement)


state 96

   31 statement: iteration_statement .

    $default  reduce using rule 31 (statement)


state 97

   32 statement: return_statement .

    $default  reduce using rule 32 (statement)


state 98

   33 statement: printf_statement .

    $default  reduce using rule 33 (statement)


state 99

   34 statement: read_statement .

    $default  reduce using rule 34 (statement)


state 100

   44 expr_statement: expr .
   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    '-'       [reduce using rule 44 (expr_statement)]
    $default  reduce using rule 44 (expr_statement)


state 101

   15 func_declaration: FUNCTION ID '(' param_list ')' @2 compound_statement .

    $default  reduce using rule 15 (func_declaration)


state 102

   93 args: expr ',' args .

    $default  reduce using rule 93 (args)


state 103

   45 selection_statement: IF if_cond . THEN embedded_statement END
   46                    | IF if_cond . THEN embedded_statement ELSE embedded_statement END

    THEN  shift, and go to state 113


state 104

   47 if_cond: expr .
   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 47 (if_cond)


state 105

   48 iteration_statement: FOR init . ',' cond ',' update DO embedded_statement

    ','  shift, and go to state 114


state 106

   49 init: assignment .

    $default  reduce using rule 49 (init)


state 107

   57 return_statement: RETURN expr .
   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    '-'       [reduce using rule 57 (return_statement)]
    $default  reduce using rule 57 (return_statement)


state 108

   58 printf_statement: PRINT '(' . format_string ')'
   59                 | PRINT '(' . format_string ',' args ')'
   60                 | PRINT '(' . ')'

    STRING  shift, and go to state 115
    ')'     shift, and go to state 116

    format_string  go to state 117


state 109

   61 read_statement: READ '(' . format_string ',' read_var_list ')'
   62               | READ '(' . format_string ')'
   63               | READ '(' . ')'

    STRING  shift, and go to state 115
    ')'     shift, and go to state 118

    format_string  go to state 119


state 110

   24 scope_exit: '}' .

    $default  reduce using rule 24 (scope_exit)


state 111

   22 compound_statement: scope_enter statement_list scope_exit .

    $default  reduce using rule 22 (compound_statement)


state 112

   26 statement_list: statement statement_list .

    $default  reduce using rule 26 (statement_list)


state 113

   45 selection_statement: IF if_cond THEN . embedded_statement END
   46                    | IF if_cond THEN . embedded_statement ELSE embedded_statement END

    IF         shift, and go to state 83
    FOR        shift, and go to state 84
    RETURN     shift, and go to state 85
    PRINT      shift, and go to state 86
    READ       shift, and go to state 87
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 88
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '{'        shift, and go to state 76
    '('        shift, and go to state 27

    var_declaration      go to state 120
    declarator_list      go to state 9
    declarator           go to state 10
    var                  go to state 90
    compound_statement   go to state 121
    scope_enter          go to state 78
    embedded_statement   go to state 122
    single_statement     go to state 123
    expr_statement       go to state 124
    selection_statement  go to state 125
    iteration_statement  go to state 126
    return_statement     go to state 127
    printf_statement     go to state 128
    read_statement       go to state 129
    assignment           go to state 13
    expr                 go to state 100
    number               go to state 30
    func_call            go to state 31


state 114

   48 iteration_statement: FOR init ',' . cond ',' update DO embedded_statement

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 52 (cond)

    var        go to state 28
    cond       go to state 130
    expr       go to state 131
    number     go to state 30
    func_call  go to state 31


state 115

   68 format_string: STRING .

    $default  reduce using rule 68 (format_string)


state 116

   60 printf_statement: PRINT '(' ')' .

    $default  reduce using rule 60 (printf_statement)


state 117

   58 printf_statement: PRINT '(' format_string . ')'
   59                 | PRINT '(' format_string . ',' args ')'

    ','  shift, and go to state 132
    ')'  shift, and go to state 133


state 118

   63 read_statement: READ '(' ')' .

    $default  reduce using rule 63 (read_statement)


state 119

   61 read_statement: READ '(' format_string . ',' read_var_list ')'
   62               | READ '(' format_string . ')'

    ','  shift, and go to state 134
    ')'  shift, and go to state 135


state 120

   37 single_statement: var_declaration .

    $default  reduce using rule 37 (single_statement)


state 121

   35 embedded_statement: compound_statement .

    $default  reduce using rule 35 (embedded_statement)


state 122

   45 selection_statement: IF if_cond THEN embedded_statement . END
   46                    | IF if_cond THEN embedded_statement . ELSE embedded_statement END

    ELSE  shift, and go to state 136
    END   shift, and go to state 137


state 123

   36 embedded_statement: single_statement .

    $default  reduce using rule 36 (embedded_statement)


state 124

   38 single_statement: expr_statement .

    $default  reduce using rule 38 (single_statement)


state 125

   39 single_statement: selection_statement .

    $default  reduce using rule 39 (single_statement)


state 126

   40 single_statement: iteration_statement .

    $default  reduce using rule 40 (single_statement)


state 127

   41 single_statement: return_statement .

    $default  reduce using rule 41 (single_statement)


state 128

   42 single_statement: printf_statement .

    $default  reduce using rule 42 (single_statement)


state 129

   43 single_statement: read_statement .

    $default  reduce using rule 43 (single_statement)


state 130

   48 iteration_statement: FOR init ',' cond . ',' update DO embedded_statement

    ','  shift, and go to state 138


state 131

   51 cond: expr .
   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 51 (cond)


state 132

   59 printf_statement: PRINT '(' format_string ',' . args ')'

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    var        go to state 28
    expr       go to state 60
    number     go to state 30
    func_call  go to state 31
    args       go to state 139


state 133

   58 printf_statement: PRINT '(' format_string ')' .

    $default  reduce using rule 58 (printf_statement)


state 134

   61 read_statement: READ '(' format_string ',' . read_var_list ')'

    ID   shift, and go to state 15
    '&'  shift, and go to state 140

    var            go to state 141
    read_var_list  go to state 142


state 135

   62 read_statement: READ '(' format_string ')' .

    $default  reduce using rule 62 (read_statement)


state 136

   46 selection_statement: IF if_cond THEN embedded_statement ELSE . embedded_statement END

    IF         shift, and go to state 83
    FOR        shift, and go to state 84
    RETURN     shift, and go to state 85
    PRINT      shift, and go to state 86
    READ       shift, and go to state 87
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 88
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '{'        shift, and go to state 76
    '('        shift, and go to state 27

    var_declaration      go to state 120
    declarator_list      go to state 9
    declarator           go to state 10
    var                  go to state 90
    compound_statement   go to state 121
    scope_enter          go to state 78
    embedded_statement   go to state 143
    single_statement     go to state 123
    expr_statement       go to state 124
    selection_statement  go to state 125
    iteration_statement  go to state 126
    return_statement     go to state 127
    printf_statement     go to state 128
    read_statement       go to state 129
    assignment           go to state 13
    expr                 go to state 100
    number               go to state 30
    func_call            go to state 31


state 137

   45 selection_statement: IF if_cond THEN embedded_statement END .

    $default  reduce using rule 45 (selection_statement)


state 138

   48 iteration_statement: FOR init ',' cond ',' . update DO embedded_statement

    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 24
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '('        shift, and go to state 27

    $default  reduce using rule 55 (update)

    var         go to state 90
    update      go to state 144
    assignment  go to state 145
    expr        go to state 146
    number      go to state 30
    func_call   go to state 31


state 139

   59 printf_statement: PRINT '(' format_string ',' args . ')'

    ')'  shift, and go to state 147


state 140

   64 read_var_list: '&' . var
   66              | '&' . var ',' read_var_list

    ID  shift, and go to state 15

    var  go to state 148


state 141

   65 read_var_list: var .
   67              | var . ',' read_var_list

    ','  shift, and go to state 149

    $default  reduce using rule 65 (read_var_list)


state 142

   61 read_statement: READ '(' format_string ',' read_var_list . ')'

    ')'  shift, and go to state 150


state 143

   46 selection_statement: IF if_cond THEN embedded_statement ELSE embedded_statement . END

    END  shift, and go to state 151


state 144

   48 iteration_statement: FOR init ',' cond ',' update . DO embedded_statement

    DO  shift, and go to state 152


state 145

   53 update: assignment .

    $default  reduce using rule 53 (update)


state 146

   54 update: expr .
   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   78     | expr . AND expr
   79     | expr . OR expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . GE expr
   83     | expr . LE expr
   84     | expr . EQ expr
   85     | expr . NE expr

    OR   shift, and go to state 42
    AND  shift, and go to state 43
    '>'  shift, and go to state 44
    '<'  shift, and go to state 45
    NE   shift, and go to state 46
    EQ   shift, and go to state 47
    LE   shift, and go to state 48
    GE   shift, and go to state 49
    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 54 (update)


state 147

   59 printf_statement: PRINT '(' format_string ',' args ')' .

    $default  reduce using rule 59 (printf_statement)


state 148

   64 read_var_list: '&' var .
   66              | '&' var . ',' read_var_list

    ','  shift, and go to state 153

    $default  reduce using rule 64 (read_var_list)


state 149

   67 read_var_list: var ',' . read_var_list

    ID   shift, and go to state 15
    '&'  shift, and go to state 140

    var            go to state 141
    read_var_list  go to state 154


state 150

   61 read_statement: READ '(' format_string ',' read_var_list ')' .

    $default  reduce using rule 61 (read_statement)


state 151

   46 selection_statement: IF if_cond THEN embedded_statement ELSE embedded_statement END .

    $default  reduce using rule 46 (selection_statement)


state 152

   48 iteration_statement: FOR init ',' cond ',' update DO . embedded_statement

    IF         shift, and go to state 83
    FOR        shift, and go to state 84
    RETURN     shift, and go to state 85
    PRINT      shift, and go to state 86
    READ       shift, and go to state 87
    INT_NUM    shift, and go to state 22
    FLOAT_NUM  shift, and go to state 23
    ID         shift, and go to state 88
    NOT        shift, and go to state 25
    '-'        shift, and go to state 26
    '{'        shift, and go to state 76
    '('        shift, and go to state 27

    var_declaration      go to state 120
    declarator_list      go to state 9
    declarator           go to state 10
    var                  go to state 90
    compound_statement   go to state 121
    scope_enter          go to state 78
    embedded_statement   go to state 155
    single_statement     go to state 123
    expr_statement       go to state 124
    selection_statement  go to state 125
    iteration_statement  go to state 126
    return_statement     go to state 127
    printf_statement     go to state 128
    read_statement       go to state 129
    assignment           go to state 13
    expr                 go to state 100
    number               go to state 30
    func_call            go to state 31


state 153

   66 read_var_list: '&' var ',' . read_var_list

    ID   shift, and go to state 15
    '&'  shift, and go to state 140

    var            go to state 141
    read_var_list  go to state 156


state 154

   67 read_var_list: var ',' read_var_list .

    $default  reduce using rule 67 (read_var_list)


state 155

   48 iteration_statement: FOR init ',' cond ',' update DO embedded_statement .

    $default  reduce using rule 48 (iteration_statement)


state 156

   66 read_var_list: '&' var ',' read_var_list .

    $default  reduce using rule 66 (read_var_list)
