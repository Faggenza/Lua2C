Terminals unused in grammar

    NIL
    BOOL


Stato 5 1 conflitti shift/riduzione
Stato 14 1 conflitti shift/riduzione
Stato 22 2 conflitti shift/riduzione
Stato 82 6 conflitti shift/riduzione
Stato 85 3 conflitti shift/riduzione
Stato 87 15 conflitti riduzione/riduzione
Stato 98 1 conflitti shift/riduzione
Stato 106 1 conflitti shift/riduzione


Grammatica

    0 $accept: program $end

    1 $@1: ε

    2 program: $@1 global_declaration_list

    3 global_declaration_list: global_declaration
    4                        | global_declaration global_declaration_list

    5 global_declaration: var_declaration
    6                   | func_declaration

    7 var_declaration: declarator_list
    8                | ID declarator_list

    9 declarator_list: declarator
   10                | declarator ',' declarator_list

   11 declarator: var

   12 var: ID
   13    | ID '{' expr '}'

   14 $@2: ε

   15 func_declaration: FUNCTION ID '(' param_list ')' $@2 compound_statement

   16 $@3: ε

   17 func_declaration: FUNCTION ID '(' ')' $@3 compound_statement

   18 param_list: param
   19           | param ',' param_list

   20 param: ID
   21      | ID '[' ']'

   22 compound_statement: scope_enter statement_list scope_exit

   23 scope_enter: '{'

   24 scope_exit: '}'

   25 statement_list: statement
   26               | statement statement_list

   27 statement: var_declaration
   28          | compound_statement
   29          | expr_statement
   30          | selection_statement
   31          | iteration_statement
   32          | return_statement
   33          | printf_statement
   34          | read_statement
   35          | assignment_statement

   36 embedded_statement: compound_statement
   37                   | single_statement

   38 single_statement: var_declaration
   39                 | expr_statement
   40                 | selection_statement
   41                 | iteration_statement
   42                 | return_statement
   43                 | printf_statement
   44                 | read_statement
   45                 | assignment_statement

   46 expr_statement: expr

   47 selection_statement: IF if_cond THEN embedded_statement END
   48                    | IF if_cond THEN embedded_statement ELSE embedded_statement END

   49 if_cond: expr

   50 iteration_statement: FOR init ',' cond ',' update DO embedded_statement

   51 init: assignment
   52     | ε

   53 cond: expr
   54     | ε

   55 update: assignment
   56       | expr
   57       | ε

   58 return_statement: RETURN
   59                 | RETURN expr

   60 printf_statement: PRINT '(' format_string ')'
   61                 | PRINT '(' format_string ',' args ')'
   62                 | PRINT '(' ')'

   63 read_statement: READ '(' format_string ',' read_var_list ')'
   64               | READ '(' format_string ')'
   65               | READ '(' ')'

   66 read_var_list: read_var
   67              | read_var ',' read_var_list

   68 read_var: '&' var
   69         | var

   70 format_string: STRING

   71 assignment_statement: var '=' expr

   72 assignment: var '=' expr

   73 expr: var
   74     | number
   75     | func_call
   76     | expr '+' expr
   77     | expr '-' expr
   78     | expr '*' expr
   79     | expr '/' expr
   80     | NOT expr
   81     | expr AND expr
   82     | expr OR expr
   83     | expr '>' expr
   84     | expr '<' expr
   85     | expr GE expr
   86     | expr LE expr
   87     | expr EQ expr
   88     | expr NE expr
   89     | '(' expr ')'
   90     | '-' expr

   91 number: INT_NUM
   92       | FLOAT_NUM

   93 func_call: ID '(' args ')'
   94          | ID '(' ')'

   95 args: expr
   96     | expr ',' args


Simboli terminali e regole in cui appaiono

    $end (0) 0
    '&' (38) 68
    '(' (40) 15 17 60 61 62 63 64 65 89 93 94
    ')' (41) 15 17 60 61 62 63 64 65 89 93 94
    '*' (42) 78
    '+' (43) 76
    ',' (44) 10 19 50 61 63 67 96
    '-' (45) 77 90
    '/' (47) 79
    '<' (60) 84
    '=' (61) 71 72
    '>' (62) 83
    '[' (91) 21
    ']' (93) 21
    '{' (123) 13 23
    '}' (125) 13 24
    error (256)
    IF (258) 47 48
    ELSE (259) 48
    THEN (260) 47 48
    FOR (261) 50
    DO (262) 50
    END (263) 47 48
    RETURN (264) 58 59
    FUNCTION <t> (265) 15 17
    PRINT <s> (266) 60 61 62
    READ <s> (267) 63 64 65
    NIL (268)
    STRING <s> (269) 70
    BOOL (270)
    INT_NUM <s> (271) 91
    FLOAT_NUM <s> (272) 92
    ID <s> (273) 8 12 13 15 17 20 21 93 94
    AND (274) 81
    OR (275) 82
    NOT (276) 80
    GE (277) 85
    LE (278) 86
    EQ (279) 87
    NE (280) 88
    MINUS (281)


Simboli nonterminali e regole in cui appaiono

    $accept (42)
        on left: 0
    program (43)
        on left: 2
        on right: 0
    $@1 (44)
        on left: 1
        on right: 2
    global_declaration_list <ast> (45)
        on left: 3 4
        on right: 2 4
    global_declaration <ast> (46)
        on left: 5 6
        on right: 3 4
    var_declaration <ast> (47)
        on left: 7 8
        on right: 5 27 38
    declarator_list <ast> (48)
        on left: 9 10
        on right: 7 8 10
    declarator <ast> (49)
        on left: 11
        on right: 9 10
    var <ast> (50)
        on left: 12 13
        on right: 11 68 69 71 72 73
    func_declaration <ast> (51)
        on left: 15 17
        on right: 6
    $@2 (52)
        on left: 14
        on right: 15
    $@3 (53)
        on left: 16
        on right: 17
    param_list <ast> (54)
        on left: 18 19
        on right: 15 19
    param <ast> (55)
        on left: 20 21
        on right: 18 19
    compound_statement <ast> (56)
        on left: 22
        on right: 15 17 28 36
    scope_enter (57)
        on left: 23
        on right: 22
    scope_exit (58)
        on left: 24
        on right: 22
    statement_list <ast> (59)
        on left: 25 26
        on right: 22 26
    statement <ast> (60)
        on left: 27 28 29 30 31 32 33 34 35
        on right: 25 26
    embedded_statement <ast> (61)
        on left: 36 37
        on right: 47 48 50
    single_statement <ast> (62)
        on left: 38 39 40 41 42 43 44 45
        on right: 37
    expr_statement <ast> (63)
        on left: 46
        on right: 29 39
    selection_statement <ast> (64)
        on left: 47 48
        on right: 30 40
    if_cond <ast> (65)
        on left: 49
        on right: 47 48
    iteration_statement <ast> (66)
        on left: 50
        on right: 31 41
    init <ast> (67)
        on left: 51 52
        on right: 50
    cond <ast> (68)
        on left: 53 54
        on right: 50
    update <ast> (69)
        on left: 55 56 57
        on right: 50
    return_statement <ast> (70)
        on left: 58 59
        on right: 32 42
    printf_statement <ast> (71)
        on left: 60 61 62
        on right: 33 43
    read_statement <ast> (72)
        on left: 63 64 65
        on right: 34 44
    read_var_list <ast> (73)
        on left: 66 67
        on right: 63 67
    read_var <ast> (74)
        on left: 68 69
        on right: 66 67
    format_string <ast> (75)
        on left: 70
        on right: 60 61 63 64
    assignment_statement <ast> (76)
        on left: 71
        on right: 35 45
    assignment <ast> (77)
        on left: 72
        on right: 51 55
    expr <ast> (78)
        on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
        on right: 13 46 49 53 56 59 71 72 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 95 96
    number <ast> (79)
        on left: 91 92
        on right: 74
    func_call <ast> (80)
        on left: 93 94
        on right: 75
    args <ast> (81)
        on left: 95 96
        on right: 61 93 96


State 0

    0 $accept: • program $end

    $default  riduzione con la regola 1 ($@1)

    program  prosecuzione allo stato 1
    $@1      prosecuzione allo stato 2


State 1

    0 $accept: program • $end

    $end  shift e prosecuzione allo stato 3


State 2

    2 program: $@1 • global_declaration_list

    FUNCTION  shift e prosecuzione allo stato 4
    ID        shift e prosecuzione allo stato 5

    global_declaration_list  prosecuzione allo stato 6
    global_declaration       prosecuzione allo stato 7
    var_declaration          prosecuzione allo stato 8
    declarator_list          prosecuzione allo stato 9
    declarator               prosecuzione allo stato 10
    var                      prosecuzione allo stato 11
    func_declaration         prosecuzione allo stato 12


State 3

    0 $accept: program $end •

    $default  accetta


State 4

   15 func_declaration: FUNCTION • ID '(' param_list ')' $@2 compound_statement
   17                 | FUNCTION • ID '(' ')' $@3 compound_statement

    ID  shift e prosecuzione allo stato 13


State 5

    8 var_declaration: ID • declarator_list
   12 var: ID •
   13    | ID • '{' expr '}'

    ID   shift e prosecuzione allo stato 14
    '{'  shift e prosecuzione allo stato 15

    ID        [riduzione con la regola 12 (var)]
    $default  riduzione con la regola 12 (var)

    declarator_list  prosecuzione allo stato 16
    declarator       prosecuzione allo stato 10
    var              prosecuzione allo stato 11


State 6

    2 program: $@1 global_declaration_list •

    $default  riduzione con la regola 2 (program)


State 7

    3 global_declaration_list: global_declaration •
    4                        | global_declaration • global_declaration_list

    FUNCTION  shift e prosecuzione allo stato 4
    ID        shift e prosecuzione allo stato 5

    $default  riduzione con la regola 3 (global_declaration_list)

    global_declaration_list  prosecuzione allo stato 17
    global_declaration       prosecuzione allo stato 7
    var_declaration          prosecuzione allo stato 8
    declarator_list          prosecuzione allo stato 9
    declarator               prosecuzione allo stato 10
    var                      prosecuzione allo stato 11
    func_declaration         prosecuzione allo stato 12


State 8

    5 global_declaration: var_declaration •

    $default  riduzione con la regola 5 (global_declaration)


State 9

    7 var_declaration: declarator_list •

    $default  riduzione con la regola 7 (var_declaration)


State 10

    9 declarator_list: declarator •
   10                | declarator • ',' declarator_list

    ','  shift e prosecuzione allo stato 18

    $default  riduzione con la regola 9 (declarator_list)


State 11

   11 declarator: var •

    $default  riduzione con la regola 11 (declarator)


State 12

    6 global_declaration: func_declaration •

    $default  riduzione con la regola 6 (global_declaration)


State 13

   15 func_declaration: FUNCTION ID • '(' param_list ')' $@2 compound_statement
   17                 | FUNCTION ID • '(' ')' $@3 compound_statement

    '('  shift e prosecuzione allo stato 19


State 14

   12 var: ID •
   13    | ID • '{' expr '}'

    '{'  shift e prosecuzione allo stato 15

    '{'       [riduzione con la regola 12 (var)]
    $default  riduzione con la regola 12 (var)


State 15

   13 var: ID '{' • expr '}'

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 27
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 16

    8 var_declaration: ID declarator_list •

    $default  riduzione con la regola 8 (var_declaration)


State 17

    4 global_declaration_list: global_declaration global_declaration_list •

    $default  riduzione con la regola 4 (global_declaration_list)


State 18

   10 declarator_list: declarator ',' • declarator_list

    ID  shift e prosecuzione allo stato 14

    declarator_list  prosecuzione allo stato 30
    declarator       prosecuzione allo stato 10
    var              prosecuzione allo stato 11


State 19

   15 func_declaration: FUNCTION ID '(' • param_list ')' $@2 compound_statement
   17                 | FUNCTION ID '(' • ')' $@3 compound_statement

    ID   shift e prosecuzione allo stato 31
    ')'  shift e prosecuzione allo stato 32

    param_list  prosecuzione allo stato 33
    param       prosecuzione allo stato 34


State 20

   91 number: INT_NUM •

    $default  riduzione con la regola 91 (number)


State 21

   92 number: FLOAT_NUM •

    $default  riduzione con la regola 92 (number)


State 22

   12 var: ID •
   13    | ID • '{' expr '}'
   93 func_call: ID • '(' args ')'
   94          | ID • '(' ')'

    '{'  shift e prosecuzione allo stato 15
    '('  shift e prosecuzione allo stato 35

    '{'       [riduzione con la regola 12 (var)]
    '('       [riduzione con la regola 12 (var)]
    $default  riduzione con la regola 12 (var)


State 23

   80 expr: NOT • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 36
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 24

   90 expr: '-' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 37
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 25

   89 expr: '(' • expr ')'

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 38
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 26

   73 expr: var •

    $default  riduzione con la regola 73 (expr)


State 27

   13 var: ID '{' expr • '}'
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50
    '}'  shift e prosecuzione allo stato 51


State 28

   74 expr: number •

    $default  riduzione con la regola 74 (expr)


State 29

   75 expr: func_call •

    $default  riduzione con la regola 75 (expr)


State 30

   10 declarator_list: declarator ',' declarator_list •

    $default  riduzione con la regola 10 (declarator_list)


State 31

   20 param: ID •
   21      | ID • '[' ']'

    '['  shift e prosecuzione allo stato 52

    $default  riduzione con la regola 20 (param)


State 32

   17 func_declaration: FUNCTION ID '(' ')' • $@3 compound_statement

    $default  riduzione con la regola 16 ($@3)

    $@3  prosecuzione allo stato 53


State 33

   15 func_declaration: FUNCTION ID '(' param_list • ')' $@2 compound_statement

    ')'  shift e prosecuzione allo stato 54


State 34

   18 param_list: param •
   19           | param • ',' param_list

    ','  shift e prosecuzione allo stato 55

    $default  riduzione con la regola 18 (param_list)


State 35

   93 func_call: ID '(' • args ')'
   94          | ID '(' • ')'

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25
    ')'        shift e prosecuzione allo stato 56

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 57
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29
    args       prosecuzione allo stato 58


State 36

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   80     | NOT expr •
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 80 (expr)


State 37

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr
   90     | '-' expr •

    $default  riduzione con la regola 90 (expr)


State 38

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr
   89     | '(' expr • ')'

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50
    ')'  shift e prosecuzione allo stato 59


State 39

   81 expr: expr AND • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 60
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 40

   82 expr: expr OR • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 61
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 41

   83 expr: expr '>' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 62
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 42

   84 expr: expr '<' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 63
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 43

   85 expr: expr GE • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 64
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 44

   86 expr: expr LE • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 65
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 45

   87 expr: expr EQ • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 66
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 46

   88 expr: expr NE • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 67
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 47

   76 expr: expr '+' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 68
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 48

   77 expr: expr '-' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 69
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 49

   78 expr: expr '*' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 70
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 50

   79 expr: expr '/' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 71
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 51

   13 var: ID '{' expr '}' •

    $default  riduzione con la regola 13 (var)


State 52

   21 param: ID '[' • ']'

    ']'  shift e prosecuzione allo stato 72


State 53

   17 func_declaration: FUNCTION ID '(' ')' $@3 • compound_statement

    '{'  shift e prosecuzione allo stato 73

    compound_statement  prosecuzione allo stato 74
    scope_enter         prosecuzione allo stato 75


State 54

   15 func_declaration: FUNCTION ID '(' param_list ')' • $@2 compound_statement

    $default  riduzione con la regola 14 ($@2)

    $@2  prosecuzione allo stato 76


State 55

   19 param_list: param ',' • param_list

    ID  shift e prosecuzione allo stato 31

    param_list  prosecuzione allo stato 77
    param       prosecuzione allo stato 34


State 56

   94 func_call: ID '(' ')' •

    $default  riduzione con la regola 94 (func_call)


State 57

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr
   95 args: expr •
   96     | expr • ',' args

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50
    ','  shift e prosecuzione allo stato 78

    $default  riduzione con la regola 95 (args)


State 58

   93 func_call: ID '(' args • ')'

    ')'  shift e prosecuzione allo stato 79


State 59

   89 expr: '(' expr ')' •

    $default  riduzione con la regola 89 (expr)


State 60

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   81     | expr AND expr •
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 81 (expr)


State 61

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   82     | expr OR expr •
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 82 (expr)


State 62

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   83     | expr '>' expr •
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 83 (expr)


State 63

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   84     | expr '<' expr •
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 84 (expr)


State 64

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   85     | expr GE expr •
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 85 (expr)


State 65

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   86     | expr LE expr •
   87     | expr • EQ expr
   88     | expr • NE expr

    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 86 (expr)


State 66

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   87     | expr EQ expr •
   88     | expr • NE expr

    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 87 (expr)


State 67

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr
   88     | expr NE expr •

    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 88 (expr)


State 68

   76 expr: expr • '+' expr
   76     | expr '+' expr •
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    $default  riduzione con la regola 76 (expr)


State 69

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   77     | expr '-' expr •
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    $default  riduzione con la regola 77 (expr)


State 70

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   78     | expr '*' expr •
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    $default  riduzione con la regola 78 (expr)


State 71

   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   79     | expr '/' expr •
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    $default  riduzione con la regola 79 (expr)


State 72

   21 param: ID '[' ']' •

    $default  riduzione con la regola 21 (param)


State 73

   23 scope_enter: '{' •

    $default  riduzione con la regola 23 (scope_enter)


State 74

   17 func_declaration: FUNCTION ID '(' ')' $@3 compound_statement •

    $default  riduzione con la regola 17 (func_declaration)


State 75

   22 compound_statement: scope_enter • statement_list scope_exit

    IF         shift e prosecuzione allo stato 80
    FOR        shift e prosecuzione allo stato 81
    RETURN     shift e prosecuzione allo stato 82
    PRINT      shift e prosecuzione allo stato 83
    READ       shift e prosecuzione allo stato 84
    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 85
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '{'        shift e prosecuzione allo stato 73
    '('        shift e prosecuzione allo stato 25

    var_declaration       prosecuzione allo stato 86
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 87
    compound_statement    prosecuzione allo stato 88
    scope_enter           prosecuzione allo stato 75
    statement_list        prosecuzione allo stato 89
    statement             prosecuzione allo stato 90
    expr_statement        prosecuzione allo stato 91
    selection_statement   prosecuzione allo stato 92
    iteration_statement   prosecuzione allo stato 93
    return_statement      prosecuzione allo stato 94
    printf_statement      prosecuzione allo stato 95
    read_statement        prosecuzione allo stato 96
    assignment_statement  prosecuzione allo stato 97
    expr                  prosecuzione allo stato 98
    number                prosecuzione allo stato 28
    func_call             prosecuzione allo stato 29


State 76

   15 func_declaration: FUNCTION ID '(' param_list ')' $@2 • compound_statement

    '{'  shift e prosecuzione allo stato 73

    compound_statement  prosecuzione allo stato 99
    scope_enter         prosecuzione allo stato 75


State 77

   19 param_list: param ',' param_list •

    $default  riduzione con la regola 19 (param_list)


State 78

   96 args: expr ',' • args

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 57
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29
    args       prosecuzione allo stato 100


State 79

   93 func_call: ID '(' args ')' •

    $default  riduzione con la regola 93 (func_call)


State 80

   47 selection_statement: IF • if_cond THEN embedded_statement END
   48                    | IF • if_cond THEN embedded_statement ELSE embedded_statement END

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    if_cond    prosecuzione allo stato 101
    expr       prosecuzione allo stato 102
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 81

   50 iteration_statement: FOR • init ',' cond ',' update DO embedded_statement

    ID  shift e prosecuzione allo stato 14

    $default  riduzione con la regola 52 (init)

    var         prosecuzione allo stato 103
    init        prosecuzione allo stato 104
    assignment  prosecuzione allo stato 105


State 82

   58 return_statement: RETURN •
   59                 | RETURN • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    INT_NUM    [riduzione con la regola 58 (return_statement)]
    FLOAT_NUM  [riduzione con la regola 58 (return_statement)]
    ID         [riduzione con la regola 58 (return_statement)]
    NOT        [riduzione con la regola 58 (return_statement)]
    '-'        [riduzione con la regola 58 (return_statement)]
    '('        [riduzione con la regola 58 (return_statement)]
    $default   riduzione con la regola 58 (return_statement)

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 106
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 83

   60 printf_statement: PRINT • '(' format_string ')'
   61                 | PRINT • '(' format_string ',' args ')'
   62                 | PRINT • '(' ')'

    '('  shift e prosecuzione allo stato 107


State 84

   63 read_statement: READ • '(' format_string ',' read_var_list ')'
   64               | READ • '(' format_string ')'
   65               | READ • '(' ')'

    '('  shift e prosecuzione allo stato 108


State 85

    8 var_declaration: ID • declarator_list
   12 var: ID •
   13    | ID • '{' expr '}'
   93 func_call: ID • '(' args ')'
   94          | ID • '(' ')'

    ID   shift e prosecuzione allo stato 14
    '{'  shift e prosecuzione allo stato 15
    '('  shift e prosecuzione allo stato 35

    ID        [riduzione con la regola 12 (var)]
    '{'       [riduzione con la regola 12 (var)]
    '('       [riduzione con la regola 12 (var)]
    $default  riduzione con la regola 12 (var)

    declarator_list  prosecuzione allo stato 16
    declarator       prosecuzione allo stato 10
    var              prosecuzione allo stato 11


State 86

   27 statement: var_declaration •

    $default  riduzione con la regola 27 (statement)


State 87

   11 declarator: var •
   71 assignment_statement: var • '=' expr
   73 expr: var •

    '='  shift e prosecuzione allo stato 109

    IF         riduzione con la regola 11 (declarator)
    IF         [riduzione con la regola 73 (expr)]
    ELSE       riduzione con la regola 11 (declarator)
    ELSE       [riduzione con la regola 73 (expr)]
    FOR        riduzione con la regola 11 (declarator)
    FOR        [riduzione con la regola 73 (expr)]
    END        riduzione con la regola 11 (declarator)
    END        [riduzione con la regola 73 (expr)]
    RETURN     riduzione con la regola 11 (declarator)
    RETURN     [riduzione con la regola 73 (expr)]
    PRINT      riduzione con la regola 11 (declarator)
    PRINT      [riduzione con la regola 73 (expr)]
    READ       riduzione con la regola 11 (declarator)
    READ       [riduzione con la regola 73 (expr)]
    INT_NUM    riduzione con la regola 11 (declarator)
    INT_NUM    [riduzione con la regola 73 (expr)]
    FLOAT_NUM  riduzione con la regola 11 (declarator)
    FLOAT_NUM  [riduzione con la regola 73 (expr)]
    ID         riduzione con la regola 11 (declarator)
    ID         [riduzione con la regola 73 (expr)]
    AND        riduzione con la regola 73 (expr)
    OR         riduzione con la regola 73 (expr)
    NOT        riduzione con la regola 11 (declarator)
    NOT        [riduzione con la regola 73 (expr)]
    '>'        riduzione con la regola 73 (expr)
    '<'        riduzione con la regola 73 (expr)
    GE         riduzione con la regola 73 (expr)
    LE         riduzione con la regola 73 (expr)
    EQ         riduzione con la regola 73 (expr)
    NE         riduzione con la regola 73 (expr)
    '+'        riduzione con la regola 73 (expr)
    '-'        riduzione con la regola 11 (declarator)
    '-'        [riduzione con la regola 73 (expr)]
    '*'        riduzione con la regola 73 (expr)
    '/'        riduzione con la regola 73 (expr)
    '{'        riduzione con la regola 11 (declarator)
    '{'        [riduzione con la regola 73 (expr)]
    '}'        riduzione con la regola 11 (declarator)
    '}'        [riduzione con la regola 73 (expr)]
    '('        riduzione con la regola 11 (declarator)
    '('        [riduzione con la regola 73 (expr)]
    $default   riduzione con la regola 11 (declarator)


State 88

   28 statement: compound_statement •

    $default  riduzione con la regola 28 (statement)


State 89

   22 compound_statement: scope_enter statement_list • scope_exit

    '}'  shift e prosecuzione allo stato 110

    scope_exit  prosecuzione allo stato 111


State 90

   25 statement_list: statement •
   26               | statement • statement_list

    IF         shift e prosecuzione allo stato 80
    FOR        shift e prosecuzione allo stato 81
    RETURN     shift e prosecuzione allo stato 82
    PRINT      shift e prosecuzione allo stato 83
    READ       shift e prosecuzione allo stato 84
    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 85
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '{'        shift e prosecuzione allo stato 73
    '('        shift e prosecuzione allo stato 25

    $default  riduzione con la regola 25 (statement_list)

    var_declaration       prosecuzione allo stato 86
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 87
    compound_statement    prosecuzione allo stato 88
    scope_enter           prosecuzione allo stato 75
    statement_list        prosecuzione allo stato 112
    statement             prosecuzione allo stato 90
    expr_statement        prosecuzione allo stato 91
    selection_statement   prosecuzione allo stato 92
    iteration_statement   prosecuzione allo stato 93
    return_statement      prosecuzione allo stato 94
    printf_statement      prosecuzione allo stato 95
    read_statement        prosecuzione allo stato 96
    assignment_statement  prosecuzione allo stato 97
    expr                  prosecuzione allo stato 98
    number                prosecuzione allo stato 28
    func_call             prosecuzione allo stato 29


State 91

   29 statement: expr_statement •

    $default  riduzione con la regola 29 (statement)


State 92

   30 statement: selection_statement •

    $default  riduzione con la regola 30 (statement)


State 93

   31 statement: iteration_statement •

    $default  riduzione con la regola 31 (statement)


State 94

   32 statement: return_statement •

    $default  riduzione con la regola 32 (statement)


State 95

   33 statement: printf_statement •

    $default  riduzione con la regola 33 (statement)


State 96

   34 statement: read_statement •

    $default  riduzione con la regola 34 (statement)


State 97

   35 statement: assignment_statement •

    $default  riduzione con la regola 35 (statement)


State 98

   46 expr_statement: expr •
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    '-'       [riduzione con la regola 46 (expr_statement)]
    $default  riduzione con la regola 46 (expr_statement)


State 99

   15 func_declaration: FUNCTION ID '(' param_list ')' $@2 compound_statement •

    $default  riduzione con la regola 15 (func_declaration)


State 100

   96 args: expr ',' args •

    $default  riduzione con la regola 96 (args)


State 101

   47 selection_statement: IF if_cond • THEN embedded_statement END
   48                    | IF if_cond • THEN embedded_statement ELSE embedded_statement END

    THEN  shift e prosecuzione allo stato 113


State 102

   49 if_cond: expr •
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 49 (if_cond)


State 103

   72 assignment: var • '=' expr

    '='  shift e prosecuzione allo stato 114


State 104

   50 iteration_statement: FOR init • ',' cond ',' update DO embedded_statement

    ','  shift e prosecuzione allo stato 115


State 105

   51 init: assignment •

    $default  riduzione con la regola 51 (init)


State 106

   59 return_statement: RETURN expr •
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    '-'       [riduzione con la regola 59 (return_statement)]
    $default  riduzione con la regola 59 (return_statement)


State 107

   60 printf_statement: PRINT '(' • format_string ')'
   61                 | PRINT '(' • format_string ',' args ')'
   62                 | PRINT '(' • ')'

    STRING  shift e prosecuzione allo stato 116
    ')'     shift e prosecuzione allo stato 117

    format_string  prosecuzione allo stato 118


State 108

   63 read_statement: READ '(' • format_string ',' read_var_list ')'
   64               | READ '(' • format_string ')'
   65               | READ '(' • ')'

    STRING  shift e prosecuzione allo stato 116
    ')'     shift e prosecuzione allo stato 119

    format_string  prosecuzione allo stato 120


State 109

   71 assignment_statement: var '=' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 121
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 110

   24 scope_exit: '}' •

    $default  riduzione con la regola 24 (scope_exit)


State 111

   22 compound_statement: scope_enter statement_list scope_exit •

    $default  riduzione con la regola 22 (compound_statement)


State 112

   26 statement_list: statement statement_list •

    $default  riduzione con la regola 26 (statement_list)


State 113

   47 selection_statement: IF if_cond THEN • embedded_statement END
   48                    | IF if_cond THEN • embedded_statement ELSE embedded_statement END

    IF         shift e prosecuzione allo stato 80
    FOR        shift e prosecuzione allo stato 81
    RETURN     shift e prosecuzione allo stato 82
    PRINT      shift e prosecuzione allo stato 83
    READ       shift e prosecuzione allo stato 84
    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 85
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '{'        shift e prosecuzione allo stato 73
    '('        shift e prosecuzione allo stato 25

    var_declaration       prosecuzione allo stato 122
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 87
    compound_statement    prosecuzione allo stato 123
    scope_enter           prosecuzione allo stato 75
    embedded_statement    prosecuzione allo stato 124
    single_statement      prosecuzione allo stato 125
    expr_statement        prosecuzione allo stato 126
    selection_statement   prosecuzione allo stato 127
    iteration_statement   prosecuzione allo stato 128
    return_statement      prosecuzione allo stato 129
    printf_statement      prosecuzione allo stato 130
    read_statement        prosecuzione allo stato 131
    assignment_statement  prosecuzione allo stato 132
    expr                  prosecuzione allo stato 98
    number                prosecuzione allo stato 28
    func_call             prosecuzione allo stato 29


State 114

   72 assignment: var '=' • expr

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 133
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 115

   50 iteration_statement: FOR init ',' • cond ',' update DO embedded_statement

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    $default  riduzione con la regola 54 (cond)

    var        prosecuzione allo stato 26
    cond       prosecuzione allo stato 134
    expr       prosecuzione allo stato 135
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29


State 116

   70 format_string: STRING •

    $default  riduzione con la regola 70 (format_string)


State 117

   62 printf_statement: PRINT '(' ')' •

    $default  riduzione con la regola 62 (printf_statement)


State 118

   60 printf_statement: PRINT '(' format_string • ')'
   61                 | PRINT '(' format_string • ',' args ')'

    ','  shift e prosecuzione allo stato 136
    ')'  shift e prosecuzione allo stato 137


State 119

   65 read_statement: READ '(' ')' •

    $default  riduzione con la regola 65 (read_statement)


State 120

   63 read_statement: READ '(' format_string • ',' read_var_list ')'
   64               | READ '(' format_string • ')'

    ','  shift e prosecuzione allo stato 138
    ')'  shift e prosecuzione allo stato 139


State 121

   71 assignment_statement: var '=' expr •
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 71 (assignment_statement)


State 122

   38 single_statement: var_declaration •

    $default  riduzione con la regola 38 (single_statement)


State 123

   36 embedded_statement: compound_statement •

    $default  riduzione con la regola 36 (embedded_statement)


State 124

   47 selection_statement: IF if_cond THEN embedded_statement • END
   48                    | IF if_cond THEN embedded_statement • ELSE embedded_statement END

    ELSE  shift e prosecuzione allo stato 140
    END   shift e prosecuzione allo stato 141


State 125

   37 embedded_statement: single_statement •

    $default  riduzione con la regola 37 (embedded_statement)


State 126

   39 single_statement: expr_statement •

    $default  riduzione con la regola 39 (single_statement)


State 127

   40 single_statement: selection_statement •

    $default  riduzione con la regola 40 (single_statement)


State 128

   41 single_statement: iteration_statement •

    $default  riduzione con la regola 41 (single_statement)


State 129

   42 single_statement: return_statement •

    $default  riduzione con la regola 42 (single_statement)


State 130

   43 single_statement: printf_statement •

    $default  riduzione con la regola 43 (single_statement)


State 131

   44 single_statement: read_statement •

    $default  riduzione con la regola 44 (single_statement)


State 132

   45 single_statement: assignment_statement •

    $default  riduzione con la regola 45 (single_statement)


State 133

   72 assignment: var '=' expr •
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 72 (assignment)


State 134

   50 iteration_statement: FOR init ',' cond • ',' update DO embedded_statement

    ','  shift e prosecuzione allo stato 142


State 135

   53 cond: expr •
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 53 (cond)


State 136

   61 printf_statement: PRINT '(' format_string ',' • args ')'

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    var        prosecuzione allo stato 26
    expr       prosecuzione allo stato 57
    number     prosecuzione allo stato 28
    func_call  prosecuzione allo stato 29
    args       prosecuzione allo stato 143


State 137

   60 printf_statement: PRINT '(' format_string ')' •

    $default  riduzione con la regola 60 (printf_statement)


State 138

   63 read_statement: READ '(' format_string ',' • read_var_list ')'

    ID   shift e prosecuzione allo stato 14
    '&'  shift e prosecuzione allo stato 144

    var            prosecuzione allo stato 145
    read_var_list  prosecuzione allo stato 146
    read_var       prosecuzione allo stato 147


State 139

   64 read_statement: READ '(' format_string ')' •

    $default  riduzione con la regola 64 (read_statement)


State 140

   48 selection_statement: IF if_cond THEN embedded_statement ELSE • embedded_statement END

    IF         shift e prosecuzione allo stato 80
    FOR        shift e prosecuzione allo stato 81
    RETURN     shift e prosecuzione allo stato 82
    PRINT      shift e prosecuzione allo stato 83
    READ       shift e prosecuzione allo stato 84
    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 85
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '{'        shift e prosecuzione allo stato 73
    '('        shift e prosecuzione allo stato 25

    var_declaration       prosecuzione allo stato 122
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 87
    compound_statement    prosecuzione allo stato 123
    scope_enter           prosecuzione allo stato 75
    embedded_statement    prosecuzione allo stato 148
    single_statement      prosecuzione allo stato 125
    expr_statement        prosecuzione allo stato 126
    selection_statement   prosecuzione allo stato 127
    iteration_statement   prosecuzione allo stato 128
    return_statement      prosecuzione allo stato 129
    printf_statement      prosecuzione allo stato 130
    read_statement        prosecuzione allo stato 131
    assignment_statement  prosecuzione allo stato 132
    expr                  prosecuzione allo stato 98
    number                prosecuzione allo stato 28
    func_call             prosecuzione allo stato 29


State 141

   47 selection_statement: IF if_cond THEN embedded_statement END •

    $default  riduzione con la regola 47 (selection_statement)


State 142

   50 iteration_statement: FOR init ',' cond ',' • update DO embedded_statement

    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 22
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '('        shift e prosecuzione allo stato 25

    $default  riduzione con la regola 57 (update)

    var         prosecuzione allo stato 149
    update      prosecuzione allo stato 150
    assignment  prosecuzione allo stato 151
    expr        prosecuzione allo stato 152
    number      prosecuzione allo stato 28
    func_call   prosecuzione allo stato 29


State 143

   61 printf_statement: PRINT '(' format_string ',' args • ')'

    ')'  shift e prosecuzione allo stato 153


State 144

   68 read_var: '&' • var

    ID  shift e prosecuzione allo stato 14

    var  prosecuzione allo stato 154


State 145

   69 read_var: var •

    $default  riduzione con la regola 69 (read_var)


State 146

   63 read_statement: READ '(' format_string ',' read_var_list • ')'

    ')'  shift e prosecuzione allo stato 155


State 147

   66 read_var_list: read_var •
   67              | read_var • ',' read_var_list

    ','  shift e prosecuzione allo stato 156

    $default  riduzione con la regola 66 (read_var_list)


State 148

   48 selection_statement: IF if_cond THEN embedded_statement ELSE embedded_statement • END

    END  shift e prosecuzione allo stato 157


State 149

   72 assignment: var • '=' expr
   73 expr: var •

    '='  shift e prosecuzione allo stato 114

    $default  riduzione con la regola 73 (expr)


State 150

   50 iteration_statement: FOR init ',' cond ',' update • DO embedded_statement

    DO  shift e prosecuzione allo stato 158


State 151

   55 update: assignment •

    $default  riduzione con la regola 55 (update)


State 152

   56 update: expr •
   76 expr: expr • '+' expr
   77     | expr • '-' expr
   78     | expr • '*' expr
   79     | expr • '/' expr
   81     | expr • AND expr
   82     | expr • OR expr
   83     | expr • '>' expr
   84     | expr • '<' expr
   85     | expr • GE expr
   86     | expr • LE expr
   87     | expr • EQ expr
   88     | expr • NE expr

    AND  shift e prosecuzione allo stato 39
    OR   shift e prosecuzione allo stato 40
    '>'  shift e prosecuzione allo stato 41
    '<'  shift e prosecuzione allo stato 42
    GE   shift e prosecuzione allo stato 43
    LE   shift e prosecuzione allo stato 44
    EQ   shift e prosecuzione allo stato 45
    NE   shift e prosecuzione allo stato 46
    '+'  shift e prosecuzione allo stato 47
    '-'  shift e prosecuzione allo stato 48
    '*'  shift e prosecuzione allo stato 49
    '/'  shift e prosecuzione allo stato 50

    $default  riduzione con la regola 56 (update)


State 153

   61 printf_statement: PRINT '(' format_string ',' args ')' •

    $default  riduzione con la regola 61 (printf_statement)


State 154

   68 read_var: '&' var •

    $default  riduzione con la regola 68 (read_var)


State 155

   63 read_statement: READ '(' format_string ',' read_var_list ')' •

    $default  riduzione con la regola 63 (read_statement)


State 156

   67 read_var_list: read_var ',' • read_var_list

    ID   shift e prosecuzione allo stato 14
    '&'  shift e prosecuzione allo stato 144

    var            prosecuzione allo stato 145
    read_var_list  prosecuzione allo stato 159
    read_var       prosecuzione allo stato 147


State 157

   48 selection_statement: IF if_cond THEN embedded_statement ELSE embedded_statement END •

    $default  riduzione con la regola 48 (selection_statement)


State 158

   50 iteration_statement: FOR init ',' cond ',' update DO • embedded_statement

    IF         shift e prosecuzione allo stato 80
    FOR        shift e prosecuzione allo stato 81
    RETURN     shift e prosecuzione allo stato 82
    PRINT      shift e prosecuzione allo stato 83
    READ       shift e prosecuzione allo stato 84
    INT_NUM    shift e prosecuzione allo stato 20
    FLOAT_NUM  shift e prosecuzione allo stato 21
    ID         shift e prosecuzione allo stato 85
    NOT        shift e prosecuzione allo stato 23
    '-'        shift e prosecuzione allo stato 24
    '{'        shift e prosecuzione allo stato 73
    '('        shift e prosecuzione allo stato 25

    var_declaration       prosecuzione allo stato 122
    declarator_list       prosecuzione allo stato 9
    declarator            prosecuzione allo stato 10
    var                   prosecuzione allo stato 87
    compound_statement    prosecuzione allo stato 123
    scope_enter           prosecuzione allo stato 75
    embedded_statement    prosecuzione allo stato 160
    single_statement      prosecuzione allo stato 125
    expr_statement        prosecuzione allo stato 126
    selection_statement   prosecuzione allo stato 127
    iteration_statement   prosecuzione allo stato 128
    return_statement      prosecuzione allo stato 129
    printf_statement      prosecuzione allo stato 130
    read_statement        prosecuzione allo stato 131
    assignment_statement  prosecuzione allo stato 132
    expr                  prosecuzione allo stato 98
    number                prosecuzione allo stato 28
    func_call             prosecuzione allo stato 29


State 159

   67 read_var_list: read_var ',' read_var_list •

    $default  riduzione con la regola 67 (read_var_list)


State 160

   50 iteration_statement: FOR init ',' cond ',' update DO embedded_statement •

    $default  riduzione con la regola 50 (iteration_statement)
